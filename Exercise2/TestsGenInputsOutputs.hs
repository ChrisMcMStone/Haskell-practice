module TestsGenInputsOutputs where

import Exercise2(Expr(..), Sequence(..), Tree(..), Tree'(..), Result(Value, Error), toNormal, fromNormal, sequenceMap, sequenceAppend, sequenceFlatten, sequenceSplit, treeMap, treeMap')
import Helpers
-- This file was automatically generated
-- by GenerateTests2.hs.


-- Inputs and correct outputs for eval'
eval'_in = [Constant 0,Constant 0,Mul (Sub (Constant 2) (Constant (-2))) (Mul (Constant 1) (Constant 2)),Div (Mul (Constant 3) (Constant 3)) (Constant (-1)),Add (Sub (Sub (Constant (-4)) (Constant 2)) (Sub (Constant (-4)) (Constant (-3)))) (Add (Constant 1) (Add (Constant 2) (Constant 3))),Sub (Sub (Mul (Constant (-1)) (Constant (-2))) (Div (Constant 0) (Constant 0))) (Div (Sub (Constant (-5)) (Constant (-3))) (Mul (Constant (-4)) (Constant 3))),Mul (Sub (Constant 2) (Add (Constant (-6)) (Constant 3))) (Add (Div (Constant 0) (Constant 6)) (Sub (Constant 6) (Constant 0))),Mul (Sub (Constant (-7)) (Add (Constant (-3)) (Constant (-5)))) (Mul (Constant 7) (Add (Constant (-2)) (Constant 2))),Mul (Sub (Sub (Sub (Constant 8) (Constant (-2))) (Mul (Constant 6) (Constant (-7)))) (Add (Add (Constant 2) (Constant (-4))) (Div (Constant (-7)) (Constant 5)))) (Div (Mul (Sub (Constant (-5)) (Constant 2)) (Div (Constant (-8)) (Constant (-4)))) (Sub (Sub (Constant (-1)) (Constant (-6))) (Mul (Constant (-2)) (Constant (-1))))),Div (Constant 2) (Mul (Mul (Sub (Constant 4) (Constant (-6))) (Add (Constant (-4)) (Constant (-9)))) (Div (Sub (Constant (-2)) (Constant 7)) (Div (Constant 1) (Constant (-3))))),Add (Sub (Add (Div (Constant 2) (Constant (-8))) (Div (Constant 6) (Constant 5))) (Sub (Div (Constant (-10)) (Constant (-5))) (Sub (Constant 9) (Constant 3)))) (Sub (Sub (Mul (Constant (-9)) (Constant 1)) (Constant 8)) (Div (Mul (Constant (-10)) (Constant (-2))) (Sub (Constant (-9)) (Constant 8)))),Sub (Add (Div (Div (Constant (-6)) (Constant 8)) (Div (Constant (-8)) (Constant (-7)))) (Sub (Sub (Constant 2) (Constant 3)) (Constant (-3)))) (Mul (Div (Sub (Constant (-9)) (Constant (-9))) (Mul (Constant (-3)) (Constant (-4)))) (Add (Add (Constant 5) (Constant (-10))) (Constant (-10)))),Sub (Mul (Div (Div (Constant 1) (Constant (-10))) (Div (Constant 7) (Constant (-6)))) (Mul (Div (Constant (-1)) (Constant 1)) (Sub (Constant (-9)) (Constant 5)))) (Div (Div (Div (Constant (-5)) (Constant (-2))) (Mul (Constant (-2)) (Constant 0))) (Div (Add (Constant (-4)) (Constant (-9))) (Constant 7))),Add (Sub (Mul (Sub (Constant (-1)) (Constant (-3))) (Div (Constant 0) (Constant 5))) (Sub (Add (Constant (-2)) (Constant 7)) (Add (Constant 3) (Constant (-5))))) (Sub (Add (Mul (Constant (-1)) (Constant (-7))) (Div (Constant 4) (Constant 5))) (Add (Sub (Constant 6) (Constant (-4))) (Constant 3))),Mul (Add (Sub (Constant 1) (Div (Constant (-1)) (Constant 0))) (Div (Add (Constant (-4)) (Constant (-1))) (Add (Constant (-9)) (Constant 4)))) (Mul (Sub (Constant 2) (Constant 9)) (Add (Sub (Constant (-10)) (Constant 5)) (Mul (Constant 5) (Constant 10)))),Sub (Add (Add (Sub (Constant (-10)) (Constant (-2))) (Mul (Constant (-1)) (Constant 9))) (Add (Add (Constant 2) (Constant (-10))) (Sub (Constant 0) (Constant 1)))) (Mul (Add (Div (Constant (-8)) (Constant (-3))) (Constant 6)) (Add (Sub (Constant 3) (Constant 9)) (Add (Constant 4) (Constant 5)))),Div (Add (Add (Mul (Constant (-5)) (Constant (-1))) (Sub (Constant (-7)) (Constant (-9)))) (Div (Mul (Constant (-5)) (Constant 6)) (Sub (Constant 10) (Constant (-5))))) (Add (Sub (Constant 7) (Add (Constant (-10)) (Constant 5))) (Add (Add (Constant (-3)) (Constant 10)) (Sub (Constant 7) (Constant (-5))))),Sub (Add (Add (Sub (Constant 8) (Constant 6)) (Sub (Constant 1) (Constant (-5)))) (Mul (Constant (-7)) (Constant (-7)))) (Div (Constant (-5)) (Sub (Add (Constant (-2)) (Constant (-7))) (Add (Constant (-3)) (Constant (-5))))),Add (Add (Add (Add (Constant 4) (Constant (-8))) (Mul (Constant (-8)) (Constant 3))) (Mul (Mul (Constant (-9)) (Constant 8)) (Mul (Constant 10) (Constant (-8))))) (Sub (Div (Constant 2) (Mul (Constant 8) (Constant (-4)))) (Constant (-6))),Sub (Mul (Add (Sub (Constant 0) (Constant 9)) (Mul (Constant (-2)) (Constant (-9)))) (Add (Add (Constant (-1)) (Constant 6)) (Sub (Constant (-7)) (Constant 1)))) (Add (Add (Add (Constant 2) (Constant 2)) (Mul (Constant (-7)) (Constant (-7)))) (Sub (Add (Constant 0) (Constant (-6))) (Add (Constant (-4)) (Constant 10)))),Mul (Div (Mul (Sub (Constant (-4)) (Constant 1)) (Sub (Constant 9) (Constant (-2)))) (Add (Constant 9) (Mul (Constant 10) (Constant 7)))) (Div (Mul (Mul (Constant 10) (Constant (-7))) (Constant (-7))) (Mul (Constant 1) (Sub (Constant (-8)) (Constant (-5))))),Add (Sub (Div (Constant 3) (Div (Constant (-2)) (Constant 5))) (Div (Mul (Constant (-2)) (Constant (-9))) (Div (Constant 2) (Constant 2)))) (Div (Sub (Sub (Constant 10) (Constant (-7))) (Constant 3)) (Add (Mul (Constant (-2)) (Constant (-3))) (Add (Constant 6) (Constant (-4))))),Sub (Add (Mul (Add (Constant 4) (Constant (-3))) (Add (Constant 3) (Constant (-6)))) (Mul (Sub (Constant (-2)) (Constant 10)) (Mul (Constant 8) (Constant 0)))) (Add (Constant 3) (Div (Add (Constant (-10)) (Constant 1)) (Div (Constant 2) (Constant 7)))),Div (Div (Constant 9) (Add (Add (Constant (-5)) (Constant 1)) (Mul (Constant (-3)) (Constant 7)))) (Add (Mul (Div (Constant 6) (Constant (-5))) (Mul (Constant 10) (Constant (-4)))) (Constant 8)),Div (Sub (Add (Add (Constant 9) (Constant 3)) (Constant 1)) (Div (Div (Constant 9) (Constant (-3))) (Sub (Constant (-5)) (Constant (-5))))) (Mul (Constant (-10)) (Mul (Constant (-10)) (Add (Constant 5) (Constant (-1))))),Add (Mul (Add (Constant (-10)) (Add (Constant 8) (Constant (-10)))) (Sub (Add (Constant 1) (Constant (-5))) (Div (Constant 5) (Constant (-4))))) (Div (Div (Div (Constant (-7)) (Constant 0)) (Mul (Constant 5) (Constant 6))) (Mul (Sub (Constant 0) (Constant 3)) (Add (Constant 0) (Constant 6)))),Div (Add (Sub (Mul (Constant 3) (Constant 3)) (Mul (Constant (-3)) (Constant 6))) (Add (Constant (-6)) (Mul (Constant (-6)) (Constant 7)))) (Constant (-6)),Sub (Sub (Mul (Sub (Constant 5) (Constant (-7))) (Div (Constant (-6)) (Constant (-1)))) (Constant 10)) (Add (Sub (Constant 2) (Constant (-3))) (Div (Mul (Constant (-6)) (Constant (-10))) (Mul (Constant (-4)) (Constant 2)))),Mul (Mul (Add (Sub (Constant 8) (Constant (-6))) (Add (Constant (-2)) (Constant (-3)))) (Add (Mul (Constant (-2)) (Constant (-8))) (Mul (Constant 2) (Constant (-1))))) (Mul (Div (Sub (Constant 4) (Constant (-5))) (Add (Constant (-7)) (Constant 6))) (Div (Sub (Constant (-4)) (Constant (-10))) (Sub (Constant (-6)) (Constant (-7))))),Add (Sub (Sub (Add (Constant (-7)) (Constant (-5))) (Sub (Constant 4) (Constant (-10)))) (Constant (-1))) (Add (Div (Constant (-3)) (Mul (Constant 3) (Constant (-5)))) (Mul (Constant 9) (Sub (Constant 10) (Constant (-6))))),Div (Sub (Add (Constant 0) (Div (Constant (-7)) (Constant 10))) (Constant 2)) (Div (Sub (Add (Constant 0) (Constant (-8))) (Sub (Constant (-3)) (Constant (-10)))) (Div (Div (Constant 4) (Constant 5)) (Div (Constant 7) (Constant 10)))),Sub (Div (Sub (Add (Constant (-8)) (Constant (-7))) (Constant 5)) (Sub (Sub (Constant (-10)) (Constant (-6))) (Sub (Constant (-5)) (Constant (-1))))) (Add (Sub (Sub (Constant (-4)) (Constant (-1))) (Sub (Constant 7) (Constant (-7)))) (Sub (Constant 9) (Sub (Constant 10) (Constant (-1))))),Add (Sub (Add (Mul (Constant 8) (Constant (-3))) (Div (Constant (-4)) (Constant 4))) (Mul (Sub (Constant (-9)) (Constant (-2))) (Div (Constant 1) (Constant (-7))))) (Add (Div (Mul (Constant (-7)) (Constant 7)) (Sub (Constant (-4)) (Constant 0))) (Sub (Add (Constant 1) (Constant 4)) (Mul (Constant (-8)) (Constant (-3))))),Sub (Add (Constant (-8)) (Add (Add (Constant 9) (Constant (-5))) (Add (Constant (-4)) (Constant 3)))) (Sub (Add (Constant (-10)) (Constant 10)) (Add (Constant (-6)) (Add (Constant (-10)) (Constant (-7))))),Mul (Div (Div (Constant 3) (Div (Constant 7) (Constant 9))) (Constant 9)) (Add (Constant (-6)) (Div (Mul (Constant 10) (Constant 9)) (Sub (Constant (-5)) (Constant 4)))),Mul (Constant 6) (Mul (Mul (Div (Constant 4) (Constant (-1))) (Add (Constant 6) (Constant 9))) (Add (Mul (Constant (-7)) (Constant 6)) (Add (Constant 4) (Constant 10))))]
eval'_out = [Value 0,Value 0,Value 8,Value (-9),Value 1,Error,Value 30,Value 0,Value (-280),Value (-1),Value (-11),Value 1,Error,Value (-13),Error,Value (-50),Value 0,Value 52,Value 5737,Value (-68),Value 164,Value (-20),Error,Value (-1),Error,Error,Value 3,Value 65,Value (-6804),Value 119,Error,Error,Value (-39),Value (-28),Error,Value 10080]

-- Inputs and correct outputs for cleverShow
cleverShow_in = [Constant 0,Constant (-1),Mul (Add (Constant 2) (Constant (-1))) (Constant 1),Constant 1,Sub (Sub (Sub (Constant (-3)) (Constant 0)) (Constant (-2))) (Add (Add (Constant (-2)) (Constant (-1))) (Sub (Constant 0) (Constant 4))),Add (Sub (Sub (Constant 1) (Constant (-1))) (Constant 2)) (Div (Sub (Constant 5) (Constant 2)) (Sub (Constant 5) (Constant 1))),Div (Div (Add (Constant 3) (Constant 5)) (Add (Constant 3) (Constant (-4)))) (Add (Sub (Constant (-6)) (Constant 0)) (Div (Constant (-3)) (Constant 0))),Mul (Div (Sub (Constant 7) (Constant (-6))) (Mul (Constant 7) (Constant (-7)))) (Mul (Add (Constant (-5)) (Constant 1)) (Add (Constant 1) (Constant (-1)))),Add (Add (Sub (Add (Constant 2) (Constant (-3))) (Mul (Constant 0) (Constant (-3)))) (Div (Mul (Constant (-6)) (Constant (-3))) (Div (Constant (-6)) (Constant 8)))) (Mul (Sub (Constant (-8)) (Add (Constant 1) (Constant (-4)))) (Add (Div (Constant 5) (Constant 7)) (Add (Constant (-2)) (Constant (-5))))),Sub (Div (Mul (Sub (Constant 0) (Constant 7)) (Constant 2)) (Sub (Div (Constant (-5)) (Constant 4)) (Constant (-1)))) (Div (Constant (-5)) (Constant (-9))),Mul (Div (Div (Constant 5) (Add (Constant 0) (Constant (-6)))) (Mul (Div (Constant 3) (Constant (-6))) (Constant (-2)))) (Add (Add (Mul (Constant 0) (Constant 7)) (Add (Constant (-4)) (Constant (-5)))) (Add (Constant 3) (Sub (Constant (-3)) (Constant 7)))),Mul (Div (Mul (Constant 0) (Constant (-8))) (Sub (Add (Constant 5) (Constant 2)) (Add (Constant 5) (Constant 0)))) (Sub (Constant (-5)) (Sub (Div (Constant 9) (Constant (-9))) (Sub (Constant (-10)) (Constant (-2))))),Div (Div (Div (Constant 4) (Sub (Constant (-10)) (Constant (-10)))) (Mul (Mul (Constant (-7)) (Constant (-10))) (Div (Constant (-8)) (Constant 6)))) (Sub (Add (Div (Constant (-10)) (Constant 6)) (Constant (-6))) (Div (Add (Constant (-2)) (Constant (-1))) (Constant (-7)))),Add (Div (Mul (Div (Constant 7) (Constant 10)) (Add (Constant 2) (Constant 1))) (Sub (Div (Constant 4) (Constant (-6))) (Mul (Constant (-1)) (Constant (-8))))) (Div (Mul (Constant (-8)) (Add (Constant 10) (Constant (-10)))) (Div (Div (Constant 6) (Constant 8)) (Constant 5))),Mul (Div (Add (Div (Constant (-9)) (Constant 1)) (Mul (Constant (-9)) (Constant 8))) (Constant (-6))) (Sub (Add (Mul (Constant (-6)) (Constant (-4))) (Div (Constant (-3)) (Constant (-10)))) (Add (Sub (Constant 8) (Constant (-2))) (Constant 2))),Add (Mul (Div (Constant 7) (Mul (Constant 8) (Constant (-7)))) (Constant (-7))) (Div (Sub (Add (Constant (-1)) (Constant (-2))) (Constant (-5))) (Div (Constant (-6)) (Constant (-7)))),Mul (Mul (Div (Constant 4) (Div (Constant 4) (Constant (-5)))) (Div (Constant 5) (Constant 10))) (Add (Mul (Add (Constant (-10)) (Constant 1)) (Sub (Constant 4) (Constant (-2)))) (Div (Constant 10) (Constant 10))),Add (Sub (Mul (Mul (Constant (-9)) (Constant 1)) (Mul (Constant 8) (Constant 10))) (Div (Sub (Constant 8) (Constant 4)) (Div (Constant (-9)) (Constant (-1))))) (Add (Sub (Sub (Constant (-4)) (Constant (-1))) (Div (Constant (-5)) (Constant (-10)))) (Add (Add (Constant 7) (Constant 6)) (Sub (Constant 0) (Constant (-7))))),Mul (Sub (Div (Constant (-7)) (Add (Constant 3) (Constant 3))) (Div (Constant 4) (Sub (Constant (-8)) (Constant 6)))) (Div (Mul (Sub (Constant (-8)) (Constant 5)) (Constant (-6))) (Add (Sub (Constant (-1)) (Constant (-6))) (Constant (-6)))),Add (Add (Add (Sub (Constant 3) (Constant 8)) (Sub (Constant (-8)) (Constant 10))) (Sub (Mul (Constant 0) (Constant 8)) (Div (Constant (-7)) (Constant (-8))))) (Div (Sub (Sub (Constant (-8)) (Constant (-7))) (Sub (Constant (-3)) (Constant 3))) (Mul (Mul (Constant 0) (Constant 0)) (Constant 4))),Add (Mul (Constant (-7)) (Add (Constant 9) (Constant 9))) (Mul (Sub (Add (Constant (-4)) (Constant 5)) (Div (Constant 0) (Constant 7))) (Add (Mul (Constant 5) (Constant (-9))) (Div (Constant 0) (Constant (-8))))),Add (Mul (Div (Mul (Constant (-4)) (Constant (-3))) (Add (Constant 4) (Constant 10))) (Mul (Div (Constant 4) (Constant (-9))) (Div (Constant (-3)) (Constant 0)))) (Sub (Mul (Sub (Constant 5) (Constant (-10))) (Mul (Constant (-10)) (Constant 10))) (Add (Mul (Constant 7) (Constant (-8))) (Add (Constant (-9)) (Constant (-1))))),Sub (Sub (Mul (Mul (Constant 4) (Constant 6)) (Sub (Constant 6) (Constant (-8)))) (Mul (Constant (-9)) (Constant 5))) (Sub (Add (Add (Constant (-5)) (Constant (-10))) (Add (Constant (-9)) (Constant 8))) (Mul (Div (Constant (-6)) (Constant (-3))) (Add (Constant 3) (Constant (-1))))),Mul (Div (Div (Div (Constant (-3)) (Constant 1)) (Sub (Constant 9) (Constant (-9)))) (Sub (Mul (Constant 5) (Constant (-9))) (Div (Constant 9) (Constant 4)))) (Mul (Sub (Add (Constant 9) (Constant 3)) (Constant 3)) (Add (Sub (Constant 10) (Constant (-8))) (Mul (Constant (-9)) (Constant 5)))),Mul (Div (Mul (Div (Constant (-3)) (Constant (-4))) (Add (Constant (-6)) (Constant 5))) (Div (Mul (Constant 3) (Constant (-6))) (Mul (Constant (-2)) (Constant (-8))))) (Div (Div (Mul (Constant (-2)) (Constant 6)) (Sub (Constant (-3)) (Constant 1))) (Add (Mul (Constant (-4)) (Constant (-10))) (Mul (Constant 0) (Constant (-2))))),Add (Sub (Add (Constant (-5)) (Sub (Constant 10) (Constant 2))) (Sub (Mul (Constant (-1)) (Constant 8)) (Constant (-7)))) (Mul (Div (Constant (-1)) (Sub (Constant (-5)) (Constant (-8)))) (Add (Constant 1) (Mul (Constant 5) (Constant (-7))))),Mul (Add (Sub (Div (Constant 9) (Constant (-2))) (Constant 5)) (Mul (Add (Constant 5) (Constant 7)) (Sub (Constant (-1)) (Constant 7)))) (Add (Add (Mul (Constant 8) (Constant (-9))) (Add (Constant (-2)) (Constant 4))) (Sub (Constant 8) (Mul (Constant 10) (Constant (-7))))),Sub (Div (Mul (Sub (Constant 6) (Constant 2)) (Mul (Constant 7) (Constant (-10)))) (Sub (Mul (Constant 3) (Constant 2)) (Div (Constant 10) (Constant (-4))))) (Add (Add (Sub (Constant (-6)) (Constant (-3))) (Add (Constant (-4)) (Constant (-4)))) (Add (Constant 0) (Div (Constant 4) (Constant 5)))),Sub (Add (Div (Sub (Constant 1) (Constant 10)) (Div (Constant 10) (Constant (-8)))) (Div (Sub (Constant 5) (Constant (-1))) (Div (Constant 5) (Constant 6)))) (Div (Mul (Mul (Constant 2) (Constant (-2))) (Add (Constant (-9)) (Constant (-4)))) (Add (Div (Constant 2) (Constant 8)) (Mul (Constant (-4)) (Constant (-8))))),Add (Sub (Add (Constant 4) (Add (Constant 6) (Constant (-5)))) (Mul (Sub (Constant (-4)) (Constant (-3))) (Add (Constant (-3)) (Constant (-10))))) (Constant 1),Mul (Sub (Add (Constant (-4)) (Constant (-2))) (Mul (Constant (-8)) (Add (Constant 1) (Constant 1)))) (Mul (Mul (Sub (Constant 0) (Constant 3)) (Sub (Constant (-4)) (Constant 6))) (Mul (Div (Constant (-1)) (Constant 4)) (Mul (Constant 0) (Constant (-9))))),Div (Mul (Mul (Add (Constant (-9)) (Constant (-5))) (Div (Constant 0) (Constant 4))) (Sub (Div (Constant 0) (Constant 3)) (Sub (Constant 6) (Constant (-10))))) (Div (Add (Add (Constant 8) (Constant (-1))) (Mul (Constant (-10)) (Constant (-1)))) (Div (Mul (Constant 2) (Constant (-7))) (Div (Constant 8) (Constant 5)))),Add (Sub (Mul (Constant (-10)) (Sub (Constant (-8)) (Constant (-10)))) (Constant (-7))) (Sub (Mul (Mul (Constant 7) (Constant (-1))) (Div (Constant 10) (Constant (-4)))) (Add (Sub (Constant (-9)) (Constant (-6))) (Constant 10))),Div (Sub (Sub (Constant (-1)) (Sub (Constant (-9)) (Constant (-1)))) (Div (Mul (Constant (-5)) (Constant 8)) (Mul (Constant 0) (Constant (-6))))) (Sub (Sub (Div (Constant (-8)) (Constant 3)) (Mul (Constant 3) (Constant (-2)))) (Constant (-1))),Div (Sub (Add (Add (Constant (-9)) (Constant (-1))) (Add (Constant 6) (Constant (-7)))) (Sub (Constant 3) (Sub (Constant 6) (Constant 6)))) (Div (Sub (Div (Constant (-10)) (Constant 6)) (Div (Constant (-1)) (Constant (-6)))) (Sub (Add (Constant (-7)) (Constant 10)) (Add (Constant (-1)) (Constant 4)))),Div (Div (Mul (Constant 8) (Constant 6)) (Div (Div (Constant (-1)) (Constant 8)) (Sub (Constant 0) (Constant (-7))))) (Add (Sub (Sub (Constant (-2)) (Constant 8)) (Sub (Constant (-7)) (Constant 6))) (Sub (Constant (-4)) (Sub (Constant 6) (Constant 8))))]
cleverShow_out = ["0","-1","(2 + -1) * 1","1","-3 - 0 - -2 - (-2 + -1 + 0 - 4)","1 - -1 - 2 + (5 - 2) / (5 - 1)","(3 + 5) / (3 + -4) / (-6 - 0 + -3 / 0)","(7 - -6) / (7 * -7) * (-5 + 1) * (1 + -1)","2 + -3 - 0 * -3 + -6 * -3 / (-6 / 8) + (-8 - (1 + -4)) * (5 / 7 + -2 + -5)","(0 - 7) * 2 / (-5 / 4 - -1) - -5 / -9","5 / (0 + -6) / (3 / -6 * -2) * (0 * 7 + -4 + -5 + 3 + -3 - 7)","0 * -8 / (5 + 2 - (5 + 0)) * (-5 - (9 / -9 - (-10 - -2)))","4 / (-10 - -10) / (-7 * -10 * -8 / 6) / (-10 / 6 + -6 - (-2 + -1) / -7)","7 / 10 * (2 + 1) / (4 / -6 - -1 * -8) + -8 * (10 + -10) / (6 / 8 / 5)","(-9 / 1 + -9 * 8) / -6 * (-6 * -4 + -3 / -10 - (8 - -2 + 2))","7 / (8 * -7) * -7 + (-1 + -2 - -5) / (-6 / -7)","4 / (4 / -5) * 5 / 10 * ((-10 + 1) * (4 - -2) + 10 / 10)","-9 * 1 * 8 * 10 - (8 - 4) / (-9 / -1) + -4 - -1 - -5 / -10 + 7 + 6 + 0 - -7","(-7 / (3 + 3) - 4 / (-8 - 6)) * (-8 - 5) * -6 / (-1 - -6 + -6)","3 - 8 + -8 - 10 + 0 * 8 - -7 / -8 + (-8 - -7 - (-3 - 3)) / (0 * 0 * 4)","-7 * (9 + 9) + (-4 + 5 - 0 / 7) * (5 * -9 + 0 / -8)","-4 * -3 / (4 + 10) * 4 / -9 * -3 / 0 + (5 - -10) * -10 * 10 - (7 * -8 + -9 + -1)","4 * 6 * (6 - -8) - -9 * 5 - (-5 + -10 + -9 + 8 - -6 / -3 * (3 + -1))","-3 / 1 / (9 - -9) / (5 * -9 - 9 / 4) * (9 + 3 - 3) * (10 - -8 + -9 * 5)","-3 / -4 * (-6 + 5) / (3 * -6 / (-2 * -8)) * -2 * 6 / (-3 - 1) / (-4 * -10 + 0 * -2)","-5 + 10 - 2 - (-1 * 8 - -7) + -1 / (-5 - -8) * (1 + 5 * -7)","(9 / -2 - 5 + (5 + 7) * (-1 - 7)) * (8 * -9 + -2 + 4 + 8 - 10 * -7)","(6 - 2) * 7 * -10 / (3 * 2 - 10 / -4) - (-6 - -3 + -4 + -4 + 0 + 4 / 5)","(1 - 10) / (10 / -8) + (5 - -1) / (5 / 6) - 2 * -2 * (-9 + -4) / (2 / 8 + -4 * -8)","4 + 6 + -5 - (-4 - -3) * (-3 + -10) + 1","(-4 + -2 - -8 * (1 + 1)) * (0 - 3) * (-4 - 6) * -1 / 4 * 0 * -9","(-9 + -5) * 0 / 4 * (0 / 3 - (6 - -10)) / ((8 + -1 + -10 * -1) / (2 * -7 / (8 / 5)))","-10 * (-8 - -10) - -7 + 7 * -1 * 10 / -4 - (-9 - -6 + 10)","(-1 - (-9 - -1) - -5 * 8 / (0 * -6)) / (-8 / 3 - 3 * -2 - -1)","(-9 + -1 + 6 + -7 - (3 - (6 - 6))) / ((-10 / 6 - -1 / -6) / (-7 + 10 - (-1 + 4)))","8 * 6 / (-1 / 8 / (0 - -7)) / (-2 - 8 - (-7 - 6) + -4 - (6 - 8))"]

-- Inputs and correct outputs for showWithOutput
showWithOutput_in = [Constant 0,Constant 0,Add (Div (Constant (-1)) (Constant 2)) (Constant 2),Div (Constant 2) (Div (Constant (-3)) (Constant (-2))),Sub (Div (Div (Constant (-3)) (Constant (-3))) (Constant 3)) (Add (Mul (Constant (-4)) (Constant 1)) (Sub (Constant 4) (Constant (-3)))),Div (Mul (Sub (Constant (-3)) (Constant (-2))) (Constant 4)) (Constant (-3)),Mul (Div (Constant 5) (Constant 3)) (Sub (Constant (-3)) (Add (Constant (-5)) (Constant 4))),Sub (Div (Div (Constant 7) (Constant (-5))) (Sub (Constant 4) (Constant 7))) (Div (Add (Constant (-7)) (Constant 1)) (Div (Constant (-5)) (Constant 1))),Div (Sub (Div (Mul (Constant 2) (Constant (-7))) (Mul (Constant (-4)) (Constant 6))) (Sub (Constant 3) (Add (Constant 1) (Constant 7)))) (Div (Sub (Add (Constant 0) (Constant 7)) (Add (Constant (-1)) (Constant (-6)))) (Mul (Add (Constant (-6)) (Constant 6)) (Constant 0))),Add (Div (Sub (Mul (Constant 8) (Constant 5)) (Sub (Constant (-5)) (Constant 4))) (Add (Constant (-6)) (Sub (Constant 5) (Constant (-4))))) (Mul (Sub (Add (Constant 0) (Constant 3)) (Sub (Constant (-6)) (Constant (-9)))) (Sub (Sub (Constant 8) (Constant 8)) (Sub (Constant (-1)) (Constant 0)))),Div (Sub (Mul (Mul (Constant 1) (Constant 4)) (Mul (Constant (-5)) (Constant (-5)))) (Mul (Sub (Constant (-6)) (Constant 5)) (Mul (Constant (-4)) (Constant (-4))))) (Div (Div (Constant 3) (Div (Constant (-9)) (Constant (-9)))) (Div (Add (Constant 0) (Constant 2)) (Constant 3))),Add (Sub (Div (Div (Constant (-9)) (Constant 5)) (Sub (Constant 6) (Constant (-5)))) (Div (Mul (Constant (-9)) (Constant 0)) (Sub (Constant 5) (Constant (-10))))) (Sub (Constant 6) (Div (Div (Constant 8) (Constant (-7))) (Mul (Constant 0) (Constant (-3))))),Div (Div (Sub (Add (Constant 6) (Constant (-6))) (Add (Constant (-7)) (Constant 10))) (Div (Add (Constant 0) (Constant 7)) (Add (Constant (-6)) (Constant 7)))) (Mul (Mul (Sub (Constant (-5)) (Constant 6)) (Mul (Constant (-9)) (Constant 4))) (Mul (Add (Constant 4) (Constant 9)) (Add (Constant 9) (Constant (-4))))),Add (Constant 9) (Mul (Add (Add (Constant 8) (Constant (-4))) (Div (Constant (-5)) (Constant (-5)))) (Sub (Constant 7) (Add (Constant 1) (Constant 2)))),Div (Add (Div (Sub (Constant (-7)) (Constant 3)) (Constant 2)) (Mul (Mul (Constant 10) (Constant 3)) (Div (Constant (-3)) (Constant (-4))))) (Constant (-6)),Add (Constant (-7)) (Add (Add (Add (Constant (-1)) (Constant 10)) (Div (Constant 6) (Constant 2))) (Div (Div (Constant (-7)) (Constant (-9))) (Sub (Constant (-4)) (Constant 5)))),Mul (Div (Mul (Sub (Constant 8) (Constant 0)) (Sub (Constant (-7)) (Constant 5))) (Sub (Div (Constant (-9)) (Constant (-6))) (Sub (Constant (-4)) (Constant (-3))))) (Mul (Div (Div (Constant (-5)) (Constant 10)) (Add (Constant (-6)) (Constant (-9)))) (Constant (-3))),Add (Add (Div (Mul (Constant 1) (Constant 4)) (Sub (Constant (-10)) (Constant 0))) (Add (Mul (Constant 0) (Constant 3)) (Add (Constant 5) (Constant (-2))))) (Div (Sub (Sub (Constant (-7)) (Constant 6)) (Sub (Constant (-6)) (Constant 10))) (Sub (Add (Constant (-3)) (Constant 4)) (Constant 6))),Add (Div (Div (Add (Constant (-1)) (Constant (-7))) (Div (Constant 4) (Constant 2))) (Div (Add (Constant (-1)) (Constant 4)) (Mul (Constant 3) (Constant 6)))) (Div (Sub (Div (Constant 5) (Constant 8)) (Constant (-3))) (Add (Div (Constant 7) (Constant 7)) (Mul (Constant 7) (Constant (-3))))),Mul (Div (Div (Sub (Constant 8) (Constant (-8))) (Sub (Constant 3) (Constant 10))) (Div (Div (Constant 5) (Constant (-10))) (Mul (Constant (-4)) (Constant (-1))))) (Add (Mul (Constant 0) (Mul (Constant (-6)) (Constant 9))) (Add (Div (Constant (-3)) (Constant 3)) (Sub (Constant (-4)) (Constant 8)))),Add (Sub (Add (Add (Constant (-9)) (Constant 6)) (Constant (-9))) (Mul (Sub (Constant 1) (Constant 6)) (Add (Constant (-4)) (Constant (-1))))) (Add (Add (Constant (-6)) (Add (Constant (-5)) (Constant 8))) (Mul (Sub (Constant 4) (Constant (-4))) (Mul (Constant (-2)) (Constant (-9))))),Sub (Add (Sub (Sub (Constant 8) (Constant (-4))) (Sub (Constant 10) (Constant (-4)))) (Mul (Div (Constant 4) (Constant (-2))) (Mul (Constant 4) (Constant (-5))))) (Sub (Mul (Add (Constant 10) (Constant 3)) (Add (Constant 4) (Constant 4))) (Sub (Sub (Constant (-8)) (Constant 5)) (Add (Constant 10) (Constant (-5))))),Mul (Div (Sub (Constant (-6)) (Mul (Constant (-1)) (Constant 4))) (Sub (Constant (-2)) (Sub (Constant (-6)) (Constant (-9))))) (Mul (Div (Add (Constant (-8)) (Constant (-10))) (Div (Constant 9) (Constant 4))) (Mul (Add (Constant (-6)) (Constant 1)) (Sub (Constant (-10)) (Constant (-8))))),Mul (Div (Sub (Sub (Constant (-8)) (Constant (-2))) (Div (Constant (-2)) (Constant 2))) (Add (Mul (Constant (-7)) (Constant 4)) (Div (Constant (-8)) (Constant 5)))) (Sub (Sub (Sub (Constant (-3)) (Constant 0)) (Add (Constant 6) (Constant 5))) (Mul (Mul (Constant (-10)) (Constant 10)) (Sub (Constant (-5)) (Constant 2)))),Add (Add (Mul (Div (Constant 1) (Constant 1)) (Div (Constant (-7)) (Constant (-5)))) (Div (Sub (Constant 3) (Constant (-3))) (Div (Constant 9) (Constant 7)))) (Div (Add (Sub (Constant (-3)) (Constant 4)) (Mul (Constant 5) (Constant (-8)))) (Add (Div (Constant 2) (Constant (-6))) (Div (Constant (-6)) (Constant 9)))),Sub (Constant 1) (Add (Add (Add (Constant (-2)) (Constant (-1))) (Constant (-6))) (Div (Sub (Constant 6) (Constant 0)) (Sub (Constant 10) (Constant (-7))))),Constant 6,Div (Div (Add (Constant 9) (Constant 6)) (Mul (Mul (Constant (-9)) (Constant 2)) (Div (Constant (-9)) (Constant (-1))))) (Add (Div (Sub (Constant (-6)) (Constant 7)) (Add (Constant 5) (Constant (-8)))) (Mul (Div (Constant (-1)) (Constant 10)) (Sub (Constant (-10)) (Constant (-2))))),Div (Sub (Div (Add (Constant (-8)) (Constant 3)) (Sub (Constant 10) (Constant 7))) (Sub (Add (Constant (-3)) (Constant (-5))) (Mul (Constant 0) (Constant 6)))) (Sub (Constant (-9)) (Div (Add (Constant (-2)) (Constant (-1))) (Sub (Constant (-1)) (Constant 5)))),Mul (Add (Div (Div (Constant 5) (Constant (-10))) (Mul (Constant 10) (Constant (-5)))) (Sub (Add (Constant (-2)) (Constant 9)) (Sub (Constant (-1)) (Constant 0)))) (Add (Div (Div (Constant (-2)) (Constant 5)) (Constant 2)) (Div (Add (Constant 8) (Constant (-8))) (Sub (Constant 8) (Constant 6)))),Add (Div (Sub (Sub (Constant 3) (Constant (-4))) (Constant (-3))) (Add (Sub (Constant (-1)) (Constant 1)) (Div (Constant (-9)) (Constant 5)))) (Mul (Add (Add (Constant (-5)) (Constant 0)) (Add (Constant (-3)) (Constant (-6)))) (Sub (Add (Constant (-2)) (Constant 6)) (Mul (Constant (-10)) (Constant 2)))),Add (Constant (-4)) (Constant 5),Sub (Mul (Div (Mul (Constant (-9)) (Constant 1)) (Sub (Constant (-9)) (Constant 1))) (Mul (Add (Constant 10) (Constant (-7))) (Div (Constant 2) (Constant 2)))) (Mul (Add (Add (Constant 8) (Constant 10)) (Constant 9)) (Mul (Constant 0) (Div (Constant (-8)) (Constant 1)))),Sub (Sub (Constant 9) (Div (Sub (Constant 0) (Constant 3)) (Sub (Constant 3) (Constant 8)))) (Mul (Constant (-7)) (Div (Div (Constant 1) (Constant 9)) (Sub (Constant (-5)) (Constant (-10))))),Mul (Constant (-1)) (Add (Div (Div (Constant 10) (Constant 6)) (Add (Constant 4) (Constant 9))) (Add (Div (Constant 7) (Constant (-6))) (Mul (Constant 3) (Constant (-7))))),Sub (Div (Div (Sub (Constant (-9)) (Constant 8)) (Sub (Constant (-8)) (Constant (-1)))) (Sub (Sub (Constant 10) (Constant 3)) (Div (Constant (-2)) (Constant 9)))) (Sub (Mul (Mul (Constant 4) (Constant (-10))) (Mul (Constant 8) (Constant 2))) (Constant 0))]
showWithOutput_out = ["0 = 0","0 = 0","-1 / 2 + 2 = 1","2 / (-3 / -2) = 2","-3 / -3 / 3 - (-4 * 1 + 4 - -3) = -3","(-3 - -2) * 4 / -3 = 1","5 / 3 * (-3 - (-5 + 4)) = -2","7 / -5 / (4 - 7) - (-7 + 1) / (-5 / 1) = -1","(2 * -7 / (-4 * 6) - (3 - (1 + 7))) / ((0 + 7 - (-1 + -6)) / ((-6 + 6) * 0)) = Error","(8 * 5 - (-5 - 4)) / (-6 + 5 - -4) + (0 + 3 - (-6 - -9)) * (8 - 8 - (-1 - 0)) = 16","(1 * 4 * -5 * -5 - (-6 - 5) * -4 * -4) / (3 / (-9 / -9) / ((0 + 2) / 3)) = Error","-9 / 5 / (6 - -5) - -9 * 0 / (5 - -10) + 6 - 8 / -7 / (0 * -3) = Error","(6 + -6 - (-7 + 10)) / ((0 + 7) / (-6 + 7)) / ((-5 - 6) * -9 * 4 * (4 + 9) * (9 + -4)) = -1","9 + (8 + -4 + -5 / -5) * (7 - (1 + 2)) = 29","((-7 - 3) / 2 + 10 * 3 * -3 / -4) / -6 = 0","-7 + -1 + 10 + 6 / 2 + -7 / -9 / (-4 - 5) = 5","(8 - 0) * (-7 - 5) / (-9 / -6 - (-4 - -3)) * -5 / 10 / (-6 + -9) * -3 = 0","1 * 4 / (-10 - 0) + 0 * 3 + 5 + -2 + (-7 - 6 - (-6 - 10)) / (-3 + 4 - 6) = 1","(-1 + -7) / (4 / 2) / ((-1 + 4) / (3 * 6)) + (5 / 8 - -3) / (7 / 7 + 7 * -3) = Error","(8 - -8) / (3 - 10) / (5 / -10 / (-4 * -1)) * (0 * -6 * 9 + -3 / 3 + -4 - 8) = -39","-9 + 6 + -9 - (1 - 6) * (-4 + -1) + -6 + -5 + 8 + (4 - -4) * -2 * -9 = 104","8 - -4 - (10 - -4) + 4 / -2 * 4 * -5 - ((10 + 3) * (4 + 4) - (-8 - 5 - (10 + -5))) = -84","(-6 - -1 * 4) / (-2 - (-6 - -9)) * (-8 + -10) / (9 / 4) * (-6 + 1) * (-10 - -8) = 0","(-8 - -2 - -2 / 2) / (-7 * 4 + -8 / 5) * (-3 - 0 - (6 + 5) - -10 * 10 * (-5 - 2)) = 0","1 / 1 * -7 / -5 + (3 - -3) / (9 / 7) + (-3 - 4 + 5 * -8) / (2 / -6 + -6 / 9) = 30","1 - (-2 + -1 + -6 + (6 - 0) / (10 - -7)) = 10","6 = 6","(9 + 6) / (-9 * 2 * -9 / -1) / ((-6 - 7) / (5 + -8) + -1 / 10 * (-10 - -2)) = -1","((-8 + 3) / (10 - 7) - (-3 + -5 - 0 * 6)) / (-9 - (-2 + -1) / (-1 - 5)) = -1","(5 / -10 / (10 * -5) + -2 + 9 - (-1 - 0)) * (-2 / 5 / 2 + (8 + -8) / (8 - 6)) = -8","(3 - -4 - -3) / (-1 - 1 + -9 / 5) + (-5 + 0 + -3 + -6) * (-2 + 6 - -10 * 2) = -339","-4 + 5 = 1","-9 * 1 / (-9 - 1) * (10 + -7) * 2 / 2 - (8 + 10 + 9) * 0 * -8 / 1 = 0","9 - (0 - 3) / (3 - 8) - -7 * 1 / 9 / (-5 - -10) = 9","-1 * (10 / 6 / (4 + 9) + 7 / -6 + 3 * -7) = 23","(-9 - 8) / (-8 - -1) / (10 - 3 - -2 / 9) - (4 * -10 * 8 * 2 - 0) = 640"]

-- Inputs and correct outputs for func_seqAppend
func_seqAppend_in = [(Empty,Empty),(Cons (-1) Empty,Empty),(Cons 1 Empty,Cons 1 (Cons (-2) Empty)),(Empty,Empty),(Cons (-1) Empty,Cons (-2) (Cons 2 (Cons (-1) Empty))),(Cons (-4) (Cons (-2) (Cons 4 Empty)),Cons 4 Empty),(Cons (-5) (Cons (-3) Empty),Cons 5 (Cons 6 (Cons (-3) Empty))),(Cons (-5) (Cons (-5) (Cons (-3) (Cons 5 (Cons (-4) (Cons (-6) (Cons 7 Empty)))))),Empty),(Cons (-6) (Cons (-3) Empty),Cons 2 (Cons 5 (Cons (-8) (Cons 1 (Cons 4 (Cons 8 Empty)))))),(Cons 7 (Cons 8 (Cons (-8) Empty)),Cons 6 (Cons 5 (Cons 5 (Cons 3 (Cons 2 Empty))))),(Cons (-5) (Cons (-5) (Cons (-1) (Cons 3 Empty))),Cons (-2) (Cons 10 (Cons (-3) (Cons 2 (Cons 6 (Cons 1 Empty)))))),(Cons 3 (Cons 5 (Cons 10 (Cons 2 (Cons (-9) Empty)))),Cons (-10) (Cons 2 (Cons (-2) (Cons 8 (Cons 4 Empty))))),(Cons 9 (Cons 9 (Cons 10 Empty)),Cons 4 (Cons (-9) (Cons (-4) (Cons (-4) (Cons (-4) (Cons 5 (Cons (-1) (Cons 3 (Cons (-10) Empty))))))))),(Cons 2 (Cons (-3) (Cons 10 (Cons 10 (Cons 1 Empty)))),Cons (-5) (Cons (-9) (Cons 6 (Cons 3 (Cons 10 (Cons 5 (Cons 4 (Cons (-6) Empty)))))))),(Empty,Cons 10 (Cons (-10) (Cons 2 (Cons 2 (Cons (-9) (Cons 3 (Cons (-10) Empty))))))),(Cons 2 (Cons 5 (Cons (-6) (Cons (-8) (Cons (-8) (Cons 8 (Cons 1 Empty)))))),Cons (-3) Empty),(Cons 0 (Cons 3 (Cons (-7) (Cons 7 (Cons 10 (Cons 8 Empty))))),Cons 9 (Cons (-6) (Cons (-2) (Cons 6 (Cons (-4) Empty))))),(Cons (-9) (Cons (-5) (Cons (-8) (Cons 1 Empty))),Cons 1 (Cons 7 (Cons 10 Empty))),(Cons 4 (Cons (-7) (Cons (-6) (Cons (-2) Empty))),Cons (-1) (Cons 1 (Cons (-5) (Cons 2 (Cons 10 (Cons 3 (Cons (-6) (Cons 8 Empty)))))))),(Cons 10 (Cons 5 (Cons (-2) (Cons 3 (Cons (-2) (Cons 2 (Cons (-1) (Cons (-2) (Cons (-8) (Cons 0 Empty))))))))),Cons (-5) (Cons (-8) (Cons 3 (Cons 8 (Cons 7 (Cons 10 (Cons (-1) (Cons (-3) (Cons (-4) Empty))))))))),(Cons 10 (Cons (-2) (Cons (-4) (Cons (-7) (Cons (-10) (Cons 5 (Cons (-4) (Cons (-1) (Cons (-2) (Cons 4 Empty))))))))),Cons (-5) (Cons 8 (Cons (-10) (Cons 7 (Cons (-5) (Cons 8 (Cons 1 (Cons (-9) Empty)))))))),(Cons 2 (Cons (-8) (Cons (-5) (Cons 6 Empty))),Empty),(Cons 5 (Cons 6 (Cons (-3) (Cons (-7) (Cons (-4) (Cons (-5) (Cons 10 Empty)))))),Cons 7 (Cons 2 (Cons 6 (Cons 5 (Cons 9 (Cons (-5) (Cons (-10) (Cons (-4) (Cons (-9) Empty))))))))),(Cons (-5) Empty,Cons (-9) (Cons 4 (Cons 2 (Cons 4 (Cons (-3) (Cons (-3) (Cons (-8) (Cons (-2) (Cons 2 Empty))))))))),(Cons 2 (Cons 7 (Cons 6 (Cons 6 (Cons (-10) (Cons 6 Empty))))),Cons 3 (Cons (-6) (Cons (-4) (Cons (-7) (Cons (-8) (Cons 6 Empty)))))),(Cons (-3) (Cons 1 (Cons (-7) Empty)),Cons 0 Empty),(Cons 9 Empty,Cons 8 (Cons (-9) (Cons 1 (Cons 10 (Cons (-4) (Cons (-5) (Cons (-9) Empty))))))),(Cons 6 (Cons (-5) (Cons (-10) (Cons (-4) (Cons 4 (Cons (-10) (Cons (-7) (Cons 8 Empty))))))),Cons (-10) Empty),(Cons 3 (Cons 1 (Cons (-9) (Cons (-4) (Cons (-8) (Cons (-3) (Cons (-6) Empty)))))),Cons 10 Empty),(Cons 2 (Cons (-2) Empty),Cons 9 (Cons 2 (Cons 4 (Cons 8 (Cons (-4) (Cons 5 (Cons 2 (Cons 4 (Cons 6 Empty))))))))),(Cons (-8) (Cons (-4) Empty),Cons (-9) (Cons (-6) Empty)),(Cons (-2) (Cons 4 Empty),Cons (-3) (Cons (-6) (Cons (-10) Empty))),(Cons 2 (Cons 8 (Cons 6 (Cons 9 (Cons 4 (Cons 9 (Cons (-7) (Cons (-6) Empty))))))),Cons (-10) (Cons (-6) Empty)),(Cons 10 (Cons 0 (Cons (-2) (Cons (-1) (Cons (-8) (Cons (-7) (Cons (-9) (Cons 0 (Cons 10 Empty)))))))),Cons (-3) (Cons (-10) (Cons (-2) (Cons 2 (Cons (-6) (Cons 2 (Cons 2 (Cons 4 (Cons 7 Empty))))))))),(Cons (-1) (Cons 2 (Cons (-6) (Cons (-6) Empty))),Cons (-8) (Cons (-4) (Cons (-8) (Cons (-5) (Cons (-1) (Cons (-7) Empty)))))),(Cons (-2) (Cons (-7) (Cons 9 (Cons (-8) (Cons 9 Empty)))),Cons 2 (Cons (-7) (Cons 2 (Cons 4 Empty))))]
func_seqAppend_out = [Empty,Cons (-1) Empty,Cons 1 (Cons 1 (Cons (-2) Empty)),Empty,Cons (-1) (Cons (-2) (Cons 2 (Cons (-1) Empty))),Cons (-4) (Cons (-2) (Cons 4 (Cons 4 Empty))),Cons (-5) (Cons (-3) (Cons 5 (Cons 6 (Cons (-3) Empty)))),Cons (-5) (Cons (-5) (Cons (-3) (Cons 5 (Cons (-4) (Cons (-6) (Cons 7 Empty)))))),Cons (-6) (Cons (-3) (Cons 2 (Cons 5 (Cons (-8) (Cons 1 (Cons 4 (Cons 8 Empty))))))),Cons 7 (Cons 8 (Cons (-8) (Cons 6 (Cons 5 (Cons 5 (Cons 3 (Cons 2 Empty))))))),Cons (-5) (Cons (-5) (Cons (-1) (Cons 3 (Cons (-2) (Cons 10 (Cons (-3) (Cons 2 (Cons 6 (Cons 1 Empty))))))))),Cons 3 (Cons 5 (Cons 10 (Cons 2 (Cons (-9) (Cons (-10) (Cons 2 (Cons (-2) (Cons 8 (Cons 4 Empty))))))))),Cons 9 (Cons 9 (Cons 10 (Cons 4 (Cons (-9) (Cons (-4) (Cons (-4) (Cons (-4) (Cons 5 (Cons (-1) (Cons 3 (Cons (-10) Empty))))))))))),Cons 2 (Cons (-3) (Cons 10 (Cons 10 (Cons 1 (Cons (-5) (Cons (-9) (Cons 6 (Cons 3 (Cons 10 (Cons 5 (Cons 4 (Cons (-6) Empty)))))))))))),Cons 10 (Cons (-10) (Cons 2 (Cons 2 (Cons (-9) (Cons 3 (Cons (-10) Empty)))))),Cons 2 (Cons 5 (Cons (-6) (Cons (-8) (Cons (-8) (Cons 8 (Cons 1 (Cons (-3) Empty))))))),Cons 0 (Cons 3 (Cons (-7) (Cons 7 (Cons 10 (Cons 8 (Cons 9 (Cons (-6) (Cons (-2) (Cons 6 (Cons (-4) Empty)))))))))),Cons (-9) (Cons (-5) (Cons (-8) (Cons 1 (Cons 1 (Cons 7 (Cons 10 Empty)))))),Cons 4 (Cons (-7) (Cons (-6) (Cons (-2) (Cons (-1) (Cons 1 (Cons (-5) (Cons 2 (Cons 10 (Cons 3 (Cons (-6) (Cons 8 Empty))))))))))),Cons 10 (Cons 5 (Cons (-2) (Cons 3 (Cons (-2) (Cons 2 (Cons (-1) (Cons (-2) (Cons (-8) (Cons 0 (Cons (-5) (Cons (-8) (Cons 3 (Cons 8 (Cons 7 (Cons 10 (Cons (-1) (Cons (-3) (Cons (-4) Empty)))))))))))))))))),Cons 10 (Cons (-2) (Cons (-4) (Cons (-7) (Cons (-10) (Cons 5 (Cons (-4) (Cons (-1) (Cons (-2) (Cons 4 (Cons (-5) (Cons 8 (Cons (-10) (Cons 7 (Cons (-5) (Cons 8 (Cons 1 (Cons (-9) Empty))))))))))))))))),Cons 2 (Cons (-8) (Cons (-5) (Cons 6 Empty))),Cons 5 (Cons 6 (Cons (-3) (Cons (-7) (Cons (-4) (Cons (-5) (Cons 10 (Cons 7 (Cons 2 (Cons 6 (Cons 5 (Cons 9 (Cons (-5) (Cons (-10) (Cons (-4) (Cons (-9) Empty))))))))))))))),Cons (-5) (Cons (-9) (Cons 4 (Cons 2 (Cons 4 (Cons (-3) (Cons (-3) (Cons (-8) (Cons (-2) (Cons 2 Empty))))))))),Cons 2 (Cons 7 (Cons 6 (Cons 6 (Cons (-10) (Cons 6 (Cons 3 (Cons (-6) (Cons (-4) (Cons (-7) (Cons (-8) (Cons 6 Empty))))))))))),Cons (-3) (Cons 1 (Cons (-7) (Cons 0 Empty))),Cons 9 (Cons 8 (Cons (-9) (Cons 1 (Cons 10 (Cons (-4) (Cons (-5) (Cons (-9) Empty))))))),Cons 6 (Cons (-5) (Cons (-10) (Cons (-4) (Cons 4 (Cons (-10) (Cons (-7) (Cons 8 (Cons (-10) Empty)))))))),Cons 3 (Cons 1 (Cons (-9) (Cons (-4) (Cons (-8) (Cons (-3) (Cons (-6) (Cons 10 Empty))))))),Cons 2 (Cons (-2) (Cons 9 (Cons 2 (Cons 4 (Cons 8 (Cons (-4) (Cons 5 (Cons 2 (Cons 4 (Cons 6 Empty)))))))))),Cons (-8) (Cons (-4) (Cons (-9) (Cons (-6) Empty))),Cons (-2) (Cons 4 (Cons (-3) (Cons (-6) (Cons (-10) Empty)))),Cons 2 (Cons 8 (Cons 6 (Cons 9 (Cons 4 (Cons 9 (Cons (-7) (Cons (-6) (Cons (-10) (Cons (-6) Empty))))))))),Cons 10 (Cons 0 (Cons (-2) (Cons (-1) (Cons (-8) (Cons (-7) (Cons (-9) (Cons 0 (Cons 10 (Cons (-3) (Cons (-10) (Cons (-2) (Cons 2 (Cons (-6) (Cons 2 (Cons 2 (Cons 4 (Cons 7 Empty))))))))))))))))),Cons (-1) (Cons 2 (Cons (-6) (Cons (-6) (Cons (-8) (Cons (-4) (Cons (-8) (Cons (-5) (Cons (-1) (Cons (-7) Empty))))))))),Cons (-2) (Cons (-7) (Cons 9 (Cons (-8) (Cons 9 (Cons 2 (Cons (-7) (Cons 2 (Cons 4 Empty))))))))]

-- Inputs and correct outputs for seqFlatten
seqFlatten_in = [Empty,Empty,Cons (Cons 0 (Cons 0 Empty)) Empty,Cons (Cons 2 (Cons (-1) (Cons (-3) Empty))) (Cons Empty (Cons (Cons (-3) Empty) Empty)),Cons (Cons (-3) (Cons 0 (Cons (-4) (Cons 0 Empty)))) (Cons Empty Empty),Cons (Cons 3 (Cons 3 (Cons (-4) Empty))) (Cons (Cons 4 (Cons 5 (Cons (-1) Empty))) Empty),Cons (Cons (-3) (Cons (-5) Empty)) (Cons (Cons 3 Empty) (Cons (Cons (-5) (Cons (-6) (Cons 3 (Cons 1 (Cons 0 Empty))))) (Cons (Cons 1 (Cons 3 (Cons (-3) (Cons (-6) (Cons 0 Empty))))) Empty))),Cons (Cons 2 Empty) (Cons (Cons (-5) (Cons 2 (Cons (-1) (Cons 1 (Cons (-1) Empty))))) (Cons (Cons 3 (Cons (-6) (Cons (-3) (Cons (-6) (Cons 5 (Cons (-7) (Cons (-1) Empty))))))) (Cons (Cons 4 (Cons (-3) (Cons 6 (Cons (-4) Empty)))) (Cons (Cons 0 (Cons 2 (Cons 5 (Cons 2 (Cons 3 Empty))))) (Cons (Cons (-6) Empty) Empty))))),Cons (Cons (-3) (Cons 1 Empty)) (Cons (Cons (-8) (Cons (-7) (Cons 1 (Cons 5 (Cons 4 Empty))))) (Cons (Cons 0 (Cons (-6) (Cons (-5) Empty))) (Cons (Cons (-7) (Cons (-5) (Cons (-4) (Cons 0 (Cons 0 Empty))))) (Cons (Cons (-1) (Cons (-3) (Cons (-2) (Cons 5 Empty)))) (Cons (Cons (-4) (Cons 7 (Cons 5 (Cons 8 (Cons 5 (Cons 8 (Cons 1 (Cons 7 Empty)))))))) Empty))))),Cons (Cons 0 (Cons (-6) (Cons (-6) (Cons (-6) Empty)))) Empty,Cons (Cons (-3) (Cons 0 (Cons 10 (Cons (-7) (Cons 6 (Cons 3 Empty)))))) (Cons (Cons 5 (Cons (-4) (Cons 7 (Cons 6 (Cons 0 (Cons 10 (Cons (-3) (Cons (-5) (Cons 8 (Cons (-8) Empty)))))))))) Empty),Cons (Cons (-5) (Cons (-1) (Cons 10 Empty))) (Cons (Cons 3 (Cons (-7) (Cons (-3) (Cons (-5) (Cons 1 (Cons 8 (Cons (-1) (Cons (-8) (Cons 10 Empty))))))))) (Cons (Cons 3 (Cons (-3) (Cons 8 (Cons 9 (Cons 10 (Cons (-8) Empty)))))) Empty)),Cons (Cons 0 (Cons 3 (Cons (-6) (Cons (-3) (Cons (-6) Empty))))) (Cons (Cons 0 (Cons 8 (Cons 5 (Cons (-9) Empty)))) (Cons (Cons 3 (Cons 3 (Cons 5 Empty))) (Cons (Cons 10 (Cons 10 (Cons (-5) (Cons 2 (Cons 8 (Cons 8 (Cons (-2) Empty))))))) (Cons (Cons 6 (Cons (-10) (Cons 0 Empty))) Empty)))),Cons (Cons (-4) Empty) (Cons (Cons (-3) (Cons 2 (Cons (-9) (Cons (-8) (Cons (-10) (Cons 0 (Cons (-4) Empty))))))) (Cons (Cons 7 Empty) (Cons (Cons 1 (Cons (-4) (Cons 6 (Cons (-4) Empty)))) (Cons (Cons 7 Empty) (Cons (Cons (-3) (Cons (-9) (Cons (-1) Empty))) Empty))))),Cons (Cons (-1) (Cons 1 (Cons 4 Empty))) (Cons (Cons 2 (Cons 10 (Cons (-6) (Cons (-1) (Cons (-9) (Cons 2 (Cons 7 (Cons 9 (Cons 8 (Cons 1 Empty)))))))))) (Cons (Cons 6 (Cons (-3) (Cons (-8) (Cons (-4) (Cons (-7) (Cons (-1) (Cons (-8) Empty))))))) (Cons (Cons (-10) (Cons (-3) (Cons (-7) (Cons 10 (Cons 1 (Cons 5 (Cons (-1) (Cons 10 (Cons 3 (Cons (-5) Empty)))))))))) (Cons (Cons 6 (Cons 3 Empty)) (Cons (Cons (-9) Empty) Empty))))),Cons (Cons 7 (Cons (-8) (Cons 1 (Cons (-9) (Cons 8 (Cons (-5) (Cons (-7) Empty))))))) (Cons (Cons (-5) (Cons (-8) (Cons (-4) (Cons (-3) (Cons (-5) (Cons 5 Empty)))))) (Cons (Cons (-1) (Cons (-8) (Cons (-1) (Cons (-5) (Cons (-9) Empty))))) (Cons (Cons (-5) (Cons (-4) (Cons 7 (Cons 1 (Cons 10 (Cons 4 (Cons 6 (Cons (-7) (Cons 6 Empty))))))))) Empty))),Cons (Cons 2 (Cons 6 (Cons 6 (Cons (-3) (Cons (-1) (Cons (-8) (Cons (-3) (Cons 10 (Cons 6 (Cons 10 Empty)))))))))) (Cons (Cons (-3) (Cons 7 (Cons 5 (Cons (-3) (Cons (-6) (Cons 0 (Cons (-2) (Cons 8 (Cons (-8) (Cons 4 Empty)))))))))) (Cons (Cons (-3) (Cons (-5) (Cons (-5) (Cons 10 (Cons (-9) (Cons (-2) (Cons 5 (Cons 4 (Cons (-6) Empty))))))))) (Cons (Cons (-8) (Cons (-3) Empty)) (Cons (Cons 6 (Cons (-1) (Cons 9 (Cons 4 (Cons (-9) Empty))))) (Cons (Cons 4 (Cons (-6) (Cons (-4) (Cons (-4) (Cons 4 (Cons 6 (Cons (-5) Empty))))))) (Cons (Cons (-1) (Cons (-5) (Cons (-9) (Cons (-9) (Cons (-6) (Cons 7 (Cons 4 (Cons (-7) (Cons (-7) Empty))))))))) Empty)))))),Cons (Cons 4 (Cons 7 (Cons 5 (Cons 5 (Cons (-6) (Cons (-1) (Cons 9 (Cons 1 Empty)))))))) (Cons (Cons (-8) (Cons (-8) (Cons 9 (Cons 8 (Cons (-8) (Cons (-2) (Cons (-5) (Cons (-7) (Cons 7 (Cons 5 Empty)))))))))) (Cons (Cons 8 (Cons (-7) (Cons 5 (Cons (-5) (Cons 7 Empty))))) Empty)),Cons (Cons (-1) (Cons 9 (Cons (-10) (Cons (-6) Empty)))) (Cons (Cons 9 (Cons (-3) (Cons 5 (Cons 5 (Cons 3 (Cons 4 (Cons 9 (Cons 5 (Cons 6 Empty))))))))) (Cons (Cons (-10) (Cons 7 (Cons (-7) (Cons 8 (Cons 2 (Cons (-8) Empty)))))) (Cons (Cons (-2) (Cons 5 (Cons (-1) (Cons (-7) (Cons (-10) (Cons (-6) (Cons 6 (Cons (-6) (Cons (-5) (Cons (-9) Empty)))))))))) (Cons (Cons (-4) (Cons 3 (Cons 10 (Cons 9 (Cons 6 (Cons 7 Empty)))))) (Cons (Cons (-9) (Cons (-8) (Cons (-10) (Cons 5 (Cons 0 (Cons (-10) (Cons (-10) (Cons 0 (Cons (-7) (Cons 2 Empty)))))))))) (Cons (Cons (-7) Empty) (Cons Empty Empty))))))),Cons (Cons (-1) (Cons 9 (Cons (-5) (Cons (-3) Empty)))) (Cons (Cons 10 (Cons (-1) (Cons 3 (Cons 8 Empty)))) (Cons (Cons 0 (Cons (-10) Empty)) (Cons (Cons (-2) (Cons (-8) (Cons 1 (Cons (-6) (Cons (-6) (Cons 7 (Cons (-5) (Cons 2 Empty)))))))) (Cons (Cons (-3) (Cons (-6) (Cons 0 (Cons 10 (Cons 9 (Cons 4 (Cons 1 Empty))))))) (Cons (Cons 1 (Cons 1 (Cons (-7) (Cons 4 (Cons 3 (Cons (-1) (Cons (-7) (Cons (-1) Empty)))))))) (Cons Empty Empty)))))),Cons (Cons (-8) (Cons (-3) (Cons 2 (Cons 0 (Cons 5 (Cons (-7) (Cons 2 (Cons 4 Empty)))))))) (Cons (Cons (-9) (Cons 6 (Cons (-5) Empty))) (Cons (Cons (-2) (Cons (-1) (Cons 6 (Cons (-1) (Cons (-1) (Cons 6 (Cons 0 (Cons 5 (Cons 1 Empty))))))))) Empty)),Cons (Cons (-7) (Cons 10 (Cons (-9) (Cons (-1) (Cons 2 (Cons 2 (Cons (-8) Empty))))))) (Cons (Cons (-1) (Cons (-9) (Cons (-4) Empty))) (Cons (Cons (-8) Empty) (Cons Empty (Cons (Cons (-4) Empty) (Cons (Cons (-6) (Cons 0 (Cons (-8) (Cons 8 (Cons (-4) (Cons 8 (Cons (-4) Empty))))))) (Cons (Cons (-9) (Cons 1 (Cons (-9) (Cons 5 (Cons (-6) (Cons 9 (Cons (-8) (Cons (-4) (Cons 10 Empty))))))))) (Cons (Cons 4 (Cons 4 Empty)) (Cons (Cons 2 (Cons (-1) (Cons 4 (Cons 2 (Cons 7 (Cons 6 (Cons 3 (Cons (-1) Empty)))))))) Empty)))))))),Cons (Cons (-4) (Cons 10 (Cons (-3) Empty))) (Cons (Cons 4 (Cons 6 (Cons (-3) (Cons (-8) (Cons 0 (Cons (-6) Empty)))))) (Cons (Cons 1 (Cons 6 Empty)) (Cons (Cons 4 (Cons 4 (Cons 2 (Cons 6 (Cons (-8) (Cons (-7) (Cons 10 (Cons (-9) Empty)))))))) (Cons (Cons (-6) (Cons 4 (Cons 5 (Cons (-2) (Cons 9 (Cons 0 (Cons 7 (Cons (-6) (Cons 4 (Cons (-10) Empty)))))))))) (Cons (Cons (-2) (Cons (-7) (Cons (-8) (Cons 10 Empty)))) Empty))))),Empty,Cons (Cons 3 (Cons (-1) (Cons 8 (Cons 6 (Cons 4 (Cons 2 Empty)))))) (Cons (Cons 5 (Cons (-4) (Cons 1 (Cons 10 Empty)))) (Cons (Cons (-2) (Cons 8 (Cons (-10) Empty))) (Cons (Cons (-6) (Cons 8 Empty)) (Cons (Cons 7 (Cons (-1) (Cons (-3) (Cons (-7) (Cons (-2) (Cons (-6) (Cons 10 (Cons (-8) (Cons 4 (Cons (-10) Empty)))))))))) (Cons (Cons (-2) (Cons (-3) (Cons (-2) (Cons 8 (Cons 9 (Cons (-3) (Cons 10 (Cons 8 Empty)))))))) (Cons (Cons (-5) (Cons (-2) (Cons 0 (Cons 8 (Cons (-5) (Cons 5 Empty)))))) Empty)))))),Cons (Cons (-9) (Cons 9 (Cons 10 (Cons 5 (Cons 4 Empty))))) (Cons (Cons 2 (Cons 0 (Cons (-10) (Cons 3 (Cons 9 Empty))))) (Cons Empty (Cons (Cons 10 (Cons 2 (Cons (-5) (Cons (-2) (Cons (-3) (Cons (-7) (Cons (-4) (Cons (-5) (Cons (-3) (Cons 10 Empty)))))))))) (Cons (Cons 7 (Cons (-10) (Cons (-9) Empty))) (Cons (Cons (-1) (Cons (-5) (Cons 9 (Cons 1 (Cons 8 (Cons (-10) Empty)))))) (Cons (Cons (-6) (Cons 8 (Cons 4 Empty))) (Cons (Cons (-3) (Cons 4 Empty)) (Cons (Cons (-6) (Cons 3 (Cons (-1) (Cons 3 (Cons 4 (Cons 9 (Cons (-7) (Cons (-8) Empty)))))))) (Cons (Cons (-8) (Cons (-1) (Cons 7 (Cons 2 Empty)))) Empty))))))))),Cons (Cons 0 (Cons 4 Empty)) (Cons (Cons 0 (Cons 0 (Cons 10 (Cons (-4) (Cons (-5) (Cons (-9) (Cons 0 (Cons (-3) (Cons 9 Empty))))))))) (Cons (Cons 1 (Cons (-8) (Cons (-7) (Cons 9 (Cons (-10) (Cons (-10) Empty)))))) (Cons (Cons (-3) (Cons (-6) (Cons 2 (Cons (-10) (Cons (-3) (Cons 2 (Cons 10 (Cons 7 (Cons 3 Empty))))))))) (Cons (Cons 2 (Cons 6 (Cons (-8) (Cons 2 (Cons (-8) (Cons (-5) (Cons 7 (Cons 3 (Cons 6 (Cons 10 Empty)))))))))) (Cons (Cons 1 (Cons (-3) (Cons (-1) Empty))) (Cons (Cons (-10) (Cons 0 (Cons (-2) (Cons (-10) (Cons 4 (Cons 0 (Cons 9 (Cons 8 (Cons 10 (Cons 4 Empty)))))))))) Empty)))))),Cons (Cons (-2) (Cons 3 (Cons (-7) (Cons 6 (Cons (-1) (Cons (-5) (Cons 6 (Cons 7 (Cons (-2) Empty))))))))) (Cons (Cons (-7) (Cons (-2) (Cons 10 (Cons (-5) (Cons (-3) Empty))))) (Cons (Cons 5 (Cons 2 Empty)) (Cons (Cons 1 (Cons 1 (Cons (-5) (Cons (-3) (Cons 7 (Cons 2 (Cons (-10) (Cons (-5) Empty)))))))) (Cons (Cons (-6) (Cons (-6) (Cons (-8) (Cons 6 (Cons 0 (Cons 8 (Cons (-6) (Cons (-1) (Cons 9 Empty))))))))) (Cons (Cons 3 (Cons 7 (Cons 5 (Cons (-6) (Cons (-1) (Cons (-4) (Cons (-4) (Cons (-3) (Cons (-6) Empty))))))))) (Cons (Cons (-7) (Cons 6 (Cons (-5) (Cons (-6) (Cons (-7) (Cons 4 (Cons 5 (Cons (-4) (Cons (-1) (Cons 4 Empty)))))))))) Empty)))))),Cons (Cons 1 (Cons (-2) (Cons 8 (Cons 0 (Cons 10 (Cons 9 Empty)))))) (Cons (Cons 3 (Cons 3 (Cons 7 (Cons (-2) (Cons (-6) (Cons (-6) Empty)))))) (Cons (Cons 3 (Cons (-9) (Cons 7 (Cons 1 (Cons 10 (Cons (-3) (Cons 5 (Cons 4 Empty)))))))) (Cons (Cons 8 (Cons 8 (Cons (-4) (Cons 5 (Cons 1 (Cons (-2) Empty)))))) (Cons (Cons 10 (Cons 7 (Cons (-5) (Cons (-9) (Cons (-2) Empty))))) (Cons (Cons (-3) (Cons (-8) Empty)) (Cons (Cons (-4) (Cons 2 (Cons (-5) Empty))) (Cons (Cons 6 (Cons (-1) (Cons 4 (Cons (-5) (Cons (-2) Empty))))) Empty))))))),Cons (Cons 8 (Cons 4 (Cons (-3) (Cons (-2) (Cons 0 (Cons (-8) (Cons (-10) Empty))))))) (Cons (Cons 4 (Cons 8 (Cons 8 (Cons 9 Empty)))) (Cons (Cons 9 (Cons 10 (Cons (-6) (Cons 0 (Cons (-3) (Cons 9 (Cons (-1) (Cons (-8) (Cons 7 Empty))))))))) (Cons (Cons 0 (Cons 9 (Cons (-10) (Cons (-5) (Cons (-4) (Cons 1 (Cons (-7) (Cons 7 Empty)))))))) (Cons Empty Empty)))),Cons (Cons (-10) Empty) (Cons (Cons 8 (Cons 5 Empty)) (Cons (Cons (-1) (Cons (-5) (Cons 7 (Cons 8 Empty)))) (Cons (Cons 8 (Cons 3 (Cons (-7) (Cons (-3) (Cons (-6) (Cons 7 (Cons (-8) (Cons 6 Empty)))))))) Empty))),Cons (Cons 10 (Cons (-6) (Cons (-8) (Cons (-3) (Cons (-9) (Cons (-4) (Cons (-1) (Cons (-2) Empty)))))))) (Cons (Cons 10 (Cons (-3) (Cons 8 (Cons 5 (Cons 0 (Cons (-7) (Cons 1 (Cons 9 (Cons 1 Empty))))))))) (Cons (Cons (-3) (Cons (-10) (Cons 8 Empty))) Empty)),Cons (Cons (-10) (Cons (-6) (Cons 9 (Cons 10 (Cons 5 (Cons 6 Empty)))))) (Cons (Cons (-3) (Cons 8 (Cons (-8) (Cons (-8) (Cons (-9) (Cons (-10) (Cons 4 (Cons (-9) (Cons 7 (Cons 9 Empty)))))))))) Empty),Cons (Cons 6 (Cons 0 Empty)) (Cons (Cons (-3) (Cons 0 (Cons 2 (Cons (-1) (Cons (-2) (Cons 9 (Cons (-6) (Cons (-6) (Cons 9 Empty))))))))) (Cons (Cons (-2) (Cons (-8) (Cons (-7) (Cons (-7) (Cons (-1) (Cons (-7) (Cons (-3) (Cons (-6) (Cons 0 (Cons 8 Empty)))))))))) (Cons (Cons (-2) (Cons 8 (Cons 8 (Cons (-2) (Cons (-7) (Cons 10 (Cons 9 (Cons 6 (Cons 8 (Cons 7 Empty)))))))))) (Cons (Cons 0 (Cons 8 (Cons (-2) (Cons (-4) (Cons 4 (Cons 9 (Cons 3 (Cons 1 Empty)))))))) (Cons (Cons (-6) (Cons 1 (Cons (-7) (Cons 7 Empty)))) (Cons (Cons 4 (Cons 4 (Cons (-7) (Cons (-5) (Cons 8 (Cons 8 Empty)))))) (Cons (Cons 10 (Cons (-6) (Cons (-8) (Cons 10 (Cons (-3) (Cons 6 Empty)))))) Empty))))))),Cons (Cons 0 (Cons 3 (Cons 8 Empty))) (Cons (Cons (-6) (Cons (-9) (Cons 0 (Cons (-4) (Cons (-5) (Cons (-7) Empty)))))) Empty),Cons (Cons (-3) (Cons 6 (Cons 6 (Cons 2 Empty)))) Empty]
seqFlatten_out = [Empty,Empty,Cons 0 (Cons 0 Empty),Cons 2 (Cons (-1) (Cons (-3) (Cons (-3) Empty))),Cons (-3) (Cons 0 (Cons (-4) (Cons 0 Empty))),Cons 3 (Cons 3 (Cons (-4) (Cons 4 (Cons 5 (Cons (-1) Empty))))),Cons (-3) (Cons (-5) (Cons 3 (Cons (-5) (Cons (-6) (Cons 3 (Cons 1 (Cons 0 (Cons 1 (Cons 3 (Cons (-3) (Cons (-6) (Cons 0 Empty)))))))))))),Cons 2 (Cons (-5) (Cons 2 (Cons (-1) (Cons 1 (Cons (-1) (Cons 3 (Cons (-6) (Cons (-3) (Cons (-6) (Cons 5 (Cons (-7) (Cons (-1) (Cons 4 (Cons (-3) (Cons 6 (Cons (-4) (Cons 0 (Cons 2 (Cons 5 (Cons 2 (Cons 3 (Cons (-6) Empty)))))))))))))))))))))),Cons (-3) (Cons 1 (Cons (-8) (Cons (-7) (Cons 1 (Cons 5 (Cons 4 (Cons 0 (Cons (-6) (Cons (-5) (Cons (-7) (Cons (-5) (Cons (-4) (Cons 0 (Cons 0 (Cons (-1) (Cons (-3) (Cons (-2) (Cons 5 (Cons (-4) (Cons 7 (Cons 5 (Cons 8 (Cons 5 (Cons 8 (Cons 1 (Cons 7 Empty)))))))))))))))))))))))))),Cons 0 (Cons (-6) (Cons (-6) (Cons (-6) Empty))),Cons (-3) (Cons 0 (Cons 10 (Cons (-7) (Cons 6 (Cons 3 (Cons 5 (Cons (-4) (Cons 7 (Cons 6 (Cons 0 (Cons 10 (Cons (-3) (Cons (-5) (Cons 8 (Cons (-8) Empty))))))))))))))),Cons (-5) (Cons (-1) (Cons 10 (Cons 3 (Cons (-7) (Cons (-3) (Cons (-5) (Cons 1 (Cons 8 (Cons (-1) (Cons (-8) (Cons 10 (Cons 3 (Cons (-3) (Cons 8 (Cons 9 (Cons 10 (Cons (-8) Empty))))))))))))))))),Cons 0 (Cons 3 (Cons (-6) (Cons (-3) (Cons (-6) (Cons 0 (Cons 8 (Cons 5 (Cons (-9) (Cons 3 (Cons 3 (Cons 5 (Cons 10 (Cons 10 (Cons (-5) (Cons 2 (Cons 8 (Cons 8 (Cons (-2) (Cons 6 (Cons (-10) (Cons 0 Empty))))))))))))))))))))),Cons (-4) (Cons (-3) (Cons 2 (Cons (-9) (Cons (-8) (Cons (-10) (Cons 0 (Cons (-4) (Cons 7 (Cons 1 (Cons (-4) (Cons 6 (Cons (-4) (Cons 7 (Cons (-3) (Cons (-9) (Cons (-1) Empty)))))))))))))))),Cons (-1) (Cons 1 (Cons 4 (Cons 2 (Cons 10 (Cons (-6) (Cons (-1) (Cons (-9) (Cons 2 (Cons 7 (Cons 9 (Cons 8 (Cons 1 (Cons 6 (Cons (-3) (Cons (-8) (Cons (-4) (Cons (-7) (Cons (-1) (Cons (-8) (Cons (-10) (Cons (-3) (Cons (-7) (Cons 10 (Cons 1 (Cons 5 (Cons (-1) (Cons 10 (Cons 3 (Cons (-5) (Cons 6 (Cons 3 (Cons (-9) Empty)))))))))))))))))))))))))))))))),Cons 7 (Cons (-8) (Cons 1 (Cons (-9) (Cons 8 (Cons (-5) (Cons (-7) (Cons (-5) (Cons (-8) (Cons (-4) (Cons (-3) (Cons (-5) (Cons 5 (Cons (-1) (Cons (-8) (Cons (-1) (Cons (-5) (Cons (-9) (Cons (-5) (Cons (-4) (Cons 7 (Cons 1 (Cons 10 (Cons 4 (Cons 6 (Cons (-7) (Cons 6 Empty)))))))))))))))))))))))))),Cons 2 (Cons 6 (Cons 6 (Cons (-3) (Cons (-1) (Cons (-8) (Cons (-3) (Cons 10 (Cons 6 (Cons 10 (Cons (-3) (Cons 7 (Cons 5 (Cons (-3) (Cons (-6) (Cons 0 (Cons (-2) (Cons 8 (Cons (-8) (Cons 4 (Cons (-3) (Cons (-5) (Cons (-5) (Cons 10 (Cons (-9) (Cons (-2) (Cons 5 (Cons 4 (Cons (-6) (Cons (-8) (Cons (-3) (Cons 6 (Cons (-1) (Cons 9 (Cons 4 (Cons (-9) (Cons 4 (Cons (-6) (Cons (-4) (Cons (-4) (Cons 4 (Cons 6 (Cons (-5) (Cons (-1) (Cons (-5) (Cons (-9) (Cons (-9) (Cons (-6) (Cons 7 (Cons 4 (Cons (-7) (Cons (-7) Empty))))))))))))))))))))))))))))))))))))))))))))))))))),Cons 4 (Cons 7 (Cons 5 (Cons 5 (Cons (-6) (Cons (-1) (Cons 9 (Cons 1 (Cons (-8) (Cons (-8) (Cons 9 (Cons 8 (Cons (-8) (Cons (-2) (Cons (-5) (Cons (-7) (Cons 7 (Cons 5 (Cons 8 (Cons (-7) (Cons 5 (Cons (-5) (Cons 7 Empty)))))))))))))))))))))),Cons (-1) (Cons 9 (Cons (-10) (Cons (-6) (Cons 9 (Cons (-3) (Cons 5 (Cons 5 (Cons 3 (Cons 4 (Cons 9 (Cons 5 (Cons 6 (Cons (-10) (Cons 7 (Cons (-7) (Cons 8 (Cons 2 (Cons (-8) (Cons (-2) (Cons 5 (Cons (-1) (Cons (-7) (Cons (-10) (Cons (-6) (Cons 6 (Cons (-6) (Cons (-5) (Cons (-9) (Cons (-4) (Cons 3 (Cons 10 (Cons 9 (Cons 6 (Cons 7 (Cons (-9) (Cons (-8) (Cons (-10) (Cons 5 (Cons 0 (Cons (-10) (Cons (-10) (Cons 0 (Cons (-7) (Cons 2 (Cons (-7) Empty))))))))))))))))))))))))))))))))))))))))))))),Cons (-1) (Cons 9 (Cons (-5) (Cons (-3) (Cons 10 (Cons (-1) (Cons 3 (Cons 8 (Cons 0 (Cons (-10) (Cons (-2) (Cons (-8) (Cons 1 (Cons (-6) (Cons (-6) (Cons 7 (Cons (-5) (Cons 2 (Cons (-3) (Cons (-6) (Cons 0 (Cons 10 (Cons 9 (Cons 4 (Cons 1 (Cons 1 (Cons 1 (Cons (-7) (Cons 4 (Cons 3 (Cons (-1) (Cons (-7) (Cons (-1) Empty)))))))))))))))))))))))))))))))),Cons (-8) (Cons (-3) (Cons 2 (Cons 0 (Cons 5 (Cons (-7) (Cons 2 (Cons 4 (Cons (-9) (Cons 6 (Cons (-5) (Cons (-2) (Cons (-1) (Cons 6 (Cons (-1) (Cons (-1) (Cons 6 (Cons 0 (Cons 5 (Cons 1 Empty))))))))))))))))))),Cons (-7) (Cons 10 (Cons (-9) (Cons (-1) (Cons 2 (Cons 2 (Cons (-8) (Cons (-1) (Cons (-9) (Cons (-4) (Cons (-8) (Cons (-4) (Cons (-6) (Cons 0 (Cons (-8) (Cons 8 (Cons (-4) (Cons 8 (Cons (-4) (Cons (-9) (Cons 1 (Cons (-9) (Cons 5 (Cons (-6) (Cons 9 (Cons (-8) (Cons (-4) (Cons 10 (Cons 4 (Cons 4 (Cons 2 (Cons (-1) (Cons 4 (Cons 2 (Cons 7 (Cons 6 (Cons 3 (Cons (-1) Empty))))))))))))))))))))))))))))))))))))),Cons (-4) (Cons 10 (Cons (-3) (Cons 4 (Cons 6 (Cons (-3) (Cons (-8) (Cons 0 (Cons (-6) (Cons 1 (Cons 6 (Cons 4 (Cons 4 (Cons 2 (Cons 6 (Cons (-8) (Cons (-7) (Cons 10 (Cons (-9) (Cons (-6) (Cons 4 (Cons 5 (Cons (-2) (Cons 9 (Cons 0 (Cons 7 (Cons (-6) (Cons 4 (Cons (-10) (Cons (-2) (Cons (-7) (Cons (-8) (Cons 10 Empty)))))))))))))))))))))))))))))))),Empty,Cons 3 (Cons (-1) (Cons 8 (Cons 6 (Cons 4 (Cons 2 (Cons 5 (Cons (-4) (Cons 1 (Cons 10 (Cons (-2) (Cons 8 (Cons (-10) (Cons (-6) (Cons 8 (Cons 7 (Cons (-1) (Cons (-3) (Cons (-7) (Cons (-2) (Cons (-6) (Cons 10 (Cons (-8) (Cons 4 (Cons (-10) (Cons (-2) (Cons (-3) (Cons (-2) (Cons 8 (Cons 9 (Cons (-3) (Cons 10 (Cons 8 (Cons (-5) (Cons (-2) (Cons 0 (Cons 8 (Cons (-5) (Cons 5 Empty)))))))))))))))))))))))))))))))))))))),Cons (-9) (Cons 9 (Cons 10 (Cons 5 (Cons 4 (Cons 2 (Cons 0 (Cons (-10) (Cons 3 (Cons 9 (Cons 10 (Cons 2 (Cons (-5) (Cons (-2) (Cons (-3) (Cons (-7) (Cons (-4) (Cons (-5) (Cons (-3) (Cons 10 (Cons 7 (Cons (-10) (Cons (-9) (Cons (-1) (Cons (-5) (Cons 9 (Cons 1 (Cons 8 (Cons (-10) (Cons (-6) (Cons 8 (Cons 4 (Cons (-3) (Cons 4 (Cons (-6) (Cons 3 (Cons (-1) (Cons 3 (Cons 4 (Cons 9 (Cons (-7) (Cons (-8) (Cons (-8) (Cons (-1) (Cons 7 (Cons 2 Empty))))))))))))))))))))))))))))))))))))))))))))),Cons 0 (Cons 4 (Cons 0 (Cons 0 (Cons 10 (Cons (-4) (Cons (-5) (Cons (-9) (Cons 0 (Cons (-3) (Cons 9 (Cons 1 (Cons (-8) (Cons (-7) (Cons 9 (Cons (-10) (Cons (-10) (Cons (-3) (Cons (-6) (Cons 2 (Cons (-10) (Cons (-3) (Cons 2 (Cons 10 (Cons 7 (Cons 3 (Cons 2 (Cons 6 (Cons (-8) (Cons 2 (Cons (-8) (Cons (-5) (Cons 7 (Cons 3 (Cons 6 (Cons 10 (Cons 1 (Cons (-3) (Cons (-1) (Cons (-10) (Cons 0 (Cons (-2) (Cons (-10) (Cons 4 (Cons 0 (Cons 9 (Cons 8 (Cons 10 (Cons 4 Empty)))))))))))))))))))))))))))))))))))))))))))))))),Cons (-2) (Cons 3 (Cons (-7) (Cons 6 (Cons (-1) (Cons (-5) (Cons 6 (Cons 7 (Cons (-2) (Cons (-7) (Cons (-2) (Cons 10 (Cons (-5) (Cons (-3) (Cons 5 (Cons 2 (Cons 1 (Cons 1 (Cons (-5) (Cons (-3) (Cons 7 (Cons 2 (Cons (-10) (Cons (-5) (Cons (-6) (Cons (-6) (Cons (-8) (Cons 6 (Cons 0 (Cons 8 (Cons (-6) (Cons (-1) (Cons 9 (Cons 3 (Cons 7 (Cons 5 (Cons (-6) (Cons (-1) (Cons (-4) (Cons (-4) (Cons (-3) (Cons (-6) (Cons (-7) (Cons 6 (Cons (-5) (Cons (-6) (Cons (-7) (Cons 4 (Cons 5 (Cons (-4) (Cons (-1) (Cons 4 Empty))))))))))))))))))))))))))))))))))))))))))))))))))),Cons 1 (Cons (-2) (Cons 8 (Cons 0 (Cons 10 (Cons 9 (Cons 3 (Cons 3 (Cons 7 (Cons (-2) (Cons (-6) (Cons (-6) (Cons 3 (Cons (-9) (Cons 7 (Cons 1 (Cons 10 (Cons (-3) (Cons 5 (Cons 4 (Cons 8 (Cons 8 (Cons (-4) (Cons 5 (Cons 1 (Cons (-2) (Cons 10 (Cons 7 (Cons (-5) (Cons (-9) (Cons (-2) (Cons (-3) (Cons (-8) (Cons (-4) (Cons 2 (Cons (-5) (Cons 6 (Cons (-1) (Cons 4 (Cons (-5) (Cons (-2) Empty)))))))))))))))))))))))))))))))))))))))),Cons 8 (Cons 4 (Cons (-3) (Cons (-2) (Cons 0 (Cons (-8) (Cons (-10) (Cons 4 (Cons 8 (Cons 8 (Cons 9 (Cons 9 (Cons 10 (Cons (-6) (Cons 0 (Cons (-3) (Cons 9 (Cons (-1) (Cons (-8) (Cons 7 (Cons 0 (Cons 9 (Cons (-10) (Cons (-5) (Cons (-4) (Cons 1 (Cons (-7) (Cons 7 Empty))))))))))))))))))))))))))),Cons (-10) (Cons 8 (Cons 5 (Cons (-1) (Cons (-5) (Cons 7 (Cons 8 (Cons 8 (Cons 3 (Cons (-7) (Cons (-3) (Cons (-6) (Cons 7 (Cons (-8) (Cons 6 Empty)))))))))))))),Cons 10 (Cons (-6) (Cons (-8) (Cons (-3) (Cons (-9) (Cons (-4) (Cons (-1) (Cons (-2) (Cons 10 (Cons (-3) (Cons 8 (Cons 5 (Cons 0 (Cons (-7) (Cons 1 (Cons 9 (Cons 1 (Cons (-3) (Cons (-10) (Cons 8 Empty))))))))))))))))))),Cons (-10) (Cons (-6) (Cons 9 (Cons 10 (Cons 5 (Cons 6 (Cons (-3) (Cons 8 (Cons (-8) (Cons (-8) (Cons (-9) (Cons (-10) (Cons 4 (Cons (-9) (Cons 7 (Cons 9 Empty))))))))))))))),Cons 6 (Cons 0 (Cons (-3) (Cons 0 (Cons 2 (Cons (-1) (Cons (-2) (Cons 9 (Cons (-6) (Cons (-6) (Cons 9 (Cons (-2) (Cons (-8) (Cons (-7) (Cons (-7) (Cons (-1) (Cons (-7) (Cons (-3) (Cons (-6) (Cons 0 (Cons 8 (Cons (-2) (Cons 8 (Cons 8 (Cons (-2) (Cons (-7) (Cons 10 (Cons 9 (Cons 6 (Cons 8 (Cons 7 (Cons 0 (Cons 8 (Cons (-2) (Cons (-4) (Cons 4 (Cons 9 (Cons 3 (Cons 1 (Cons (-6) (Cons 1 (Cons (-7) (Cons 7 (Cons 4 (Cons 4 (Cons (-7) (Cons (-5) (Cons 8 (Cons 8 (Cons 10 (Cons (-6) (Cons (-8) (Cons 10 (Cons (-3) (Cons 6 Empty)))))))))))))))))))))))))))))))))))))))))))))))))))))),Cons 0 (Cons 3 (Cons 8 (Cons (-6) (Cons (-9) (Cons 0 (Cons (-4) (Cons (-5) (Cons (-7) Empty)))))))),Cons (-3) (Cons 6 (Cons 6 (Cons 2 Empty)))]

-- Inputs and correct outputs for func_treeFold
func_treeFold_in = [Leaf' (Wrap 0),Leaf' (Wrap 0),Fork' (Fork' (Leaf' (Wrap 2)) (Leaf' (Wrap (-2)))) (Leaf' (Wrap (-2))),Leaf' (Wrap 1),Fork' (Leaf' (Wrap 2)) (Fork' (Leaf' (Wrap 3)) (Leaf' (Wrap (-2)))),Fork' (Leaf' (Wrap 4)) (Fork' (Leaf' (Wrap 3)) (Leaf' (Wrap 5))),Fork' (Fork' (Fork' (Leaf' (Wrap 1)) (Leaf' (Wrap 4))) (Fork' (Leaf' (Wrap 0)) (Leaf' (Wrap 1)))) (Fork' (Leaf' (Wrap (-4))) (Leaf' (Wrap (-4)))),Leaf' (Wrap 4),Fork' (Fork' (Leaf' (Wrap 8)) (Leaf' (Wrap (-1)))) (Fork' (Leaf' (Wrap 6)) (Fork' (Leaf' (Wrap (-5))) (Leaf' (Wrap 1)))),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap (-7))) (Leaf' (Wrap (-6)))) (Leaf' (Wrap (-5)))) (Leaf' (Wrap 2))) (Fork' (Fork' (Leaf' (Wrap 1)) (Leaf' (Wrap (-6)))) (Leaf' (Wrap (-8)))),Fork' (Fork' (Fork' (Leaf' (Wrap 4)) (Leaf' (Wrap 4))) (Fork' (Leaf' (Wrap (-1))) (Fork' (Leaf' (Wrap (-8))) (Leaf' (Wrap (-7)))))) (Leaf' (Wrap (-5))),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap 3)) (Leaf' (Wrap (-1)))) (Leaf' (Wrap 10))) (Fork' (Leaf' (Wrap (-1))) (Fork' (Leaf' (Wrap (-3))) (Leaf' (Wrap (-9)))))) (Fork' (Fork' (Fork' (Leaf' (Wrap 2)) (Leaf' (Wrap 9))) (Fork' (Leaf' (Wrap (-6))) (Leaf' (Wrap (-9))))) (Fork' (Fork' (Leaf' (Wrap (-8))) (Leaf' (Wrap 4))) (Leaf' (Wrap 8)))),Fork' (Leaf' (Wrap (-3))) (Fork' (Leaf' (Wrap (-1))) (Fork' (Fork' (Leaf' (Wrap (-2))) (Leaf' (Wrap (-9)))) (Fork' (Leaf' (Wrap 8)) (Leaf' (Wrap (-6)))))),Fork' (Fork' (Fork' (Leaf' (Wrap (-2))) (Leaf' (Wrap (-10)))) (Fork' (Fork' (Leaf' (Wrap (-9))) (Leaf' (Wrap 3))) (Leaf' (Wrap 8)))) (Leaf' (Wrap (-1))),Fork' (Fork' (Fork' (Leaf' (Wrap (-6))) (Fork' (Leaf' (Wrap 7)) (Leaf' (Wrap 2)))) (Leaf' (Wrap 3))) (Fork' (Fork' (Fork' (Leaf' (Wrap 1)) (Leaf' (Wrap (-10)))) (Fork' (Leaf' (Wrap 1)) (Leaf' (Wrap 7)))) (Leaf' (Wrap 7))),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap 5)) (Leaf' (Wrap 8))) (Fork' (Leaf' (Wrap 8)) (Leaf' (Wrap 10)))) (Fork' (Fork' (Leaf' (Wrap 0)) (Leaf' (Wrap (-10)))) (Leaf' (Wrap 2)))) (Leaf' (Wrap 6)),Fork' (Leaf' (Wrap 1)) (Leaf' (Wrap 6)),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap (-10))) (Leaf' (Wrap 5))) (Fork' (Leaf' (Wrap (-1))) (Leaf' (Wrap 2)))) (Fork' (Fork' (Leaf' (Wrap 0)) (Leaf' (Wrap (-6)))) (Leaf' (Wrap (-4))))) (Leaf' (Wrap 8)),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap (-9))) (Leaf' (Wrap (-5)))) (Fork' (Leaf' (Wrap 1)) (Leaf' (Wrap (-4))))) (Fork' (Leaf' (Wrap (-2))) (Leaf' (Wrap 6)))) (Fork' (Fork' (Fork' (Leaf' (Wrap 6)) (Leaf' (Wrap 8))) (Leaf' (Wrap 0))) (Leaf' (Wrap 0))),Fork' (Fork' (Fork' (Leaf' (Wrap 0)) (Leaf' (Wrap 4))) (Leaf' (Wrap 7))) (Fork' (Leaf' (Wrap (-5))) (Fork' (Fork' (Leaf' (Wrap (-7))) (Leaf' (Wrap 1))) (Leaf' (Wrap (-9))))),Leaf' (Wrap 7),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap (-1))) (Leaf' (Wrap (-6)))) (Fork' (Leaf' (Wrap 4)) (Leaf' (Wrap 9)))) (Fork' (Leaf' (Wrap 0)) (Leaf' (Wrap 2)))) (Fork' (Leaf' (Wrap (-9))) (Fork' (Fork' (Leaf' (Wrap 6)) (Leaf' (Wrap 0))) (Fork' (Leaf' (Wrap 5)) (Leaf' (Wrap 1))))),Fork' (Fork' (Leaf' (Wrap (-4))) (Fork' (Fork' (Leaf' (Wrap (-9))) (Leaf' (Wrap 7))) (Leaf' (Wrap (-6))))) (Leaf' (Wrap (-7))),Fork' (Fork' (Fork' (Leaf' (Wrap (-6))) (Leaf' (Wrap 2))) (Fork' (Fork' (Leaf' (Wrap (-2))) (Leaf' (Wrap 6))) (Fork' (Leaf' (Wrap (-5))) (Leaf' (Wrap (-5)))))) (Fork' (Leaf' (Wrap (-3))) (Leaf' (Wrap (-7)))),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap (-2))) (Leaf' (Wrap 5))) (Leaf' (Wrap 8))) (Fork' (Leaf' (Wrap (-8))) (Leaf' (Wrap (-6))))) (Fork' (Fork' (Leaf' (Wrap (-10))) (Fork' (Leaf' (Wrap (-6))) (Leaf' (Wrap 5)))) (Fork' (Leaf' (Wrap 2)) (Fork' (Leaf' (Wrap 6)) (Leaf' (Wrap (-8)))))),Fork' (Fork' (Fork' (Leaf' (Wrap 0)) (Leaf' (Wrap 2))) (Fork' (Leaf' (Wrap (-8))) (Leaf' (Wrap (-10))))) (Fork' (Fork' (Fork' (Leaf' (Wrap 8)) (Leaf' (Wrap 7))) (Fork' (Leaf' (Wrap (-1))) (Leaf' (Wrap (-10))))) (Fork' (Fork' (Leaf' (Wrap 2)) (Leaf' (Wrap (-2)))) (Leaf' (Wrap (-7))))),Fork' (Leaf' (Wrap (-2))) (Fork' (Fork' (Fork' (Leaf' (Wrap (-10))) (Leaf' (Wrap (-1)))) (Leaf' (Wrap (-8)))) (Leaf' (Wrap 8))),Fork' (Leaf' (Wrap (-10))) (Fork' (Fork' (Leaf' (Wrap 5)) (Fork' (Leaf' (Wrap 10)) (Leaf' (Wrap (-7))))) (Fork' (Fork' (Leaf' (Wrap 7)) (Leaf' (Wrap (-10)))) (Leaf' (Wrap 6)))),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap 2)) (Leaf' (Wrap (-10)))) (Fork' (Leaf' (Wrap 8)) (Leaf' (Wrap (-6))))) (Fork' (Leaf' (Wrap (-4))) (Leaf' (Wrap (-1))))) (Fork' (Fork' (Leaf' (Wrap (-2))) (Fork' (Leaf' (Wrap (-6))) (Leaf' (Wrap 4)))) (Leaf' (Wrap (-5)))),Fork' (Fork' (Fork' (Leaf' (Wrap 5)) (Fork' (Leaf' (Wrap (-9))) (Leaf' (Wrap (-10))))) (Fork' (Leaf' (Wrap 10)) (Leaf' (Wrap 3)))) (Fork' (Fork' (Fork' (Leaf' (Wrap 8)) (Leaf' (Wrap (-7)))) (Fork' (Leaf' (Wrap 2)) (Leaf' (Wrap (-6))))) (Fork' (Leaf' (Wrap (-1))) (Fork' (Leaf' (Wrap 6)) (Leaf' (Wrap 6))))),Fork' (Fork' (Leaf' (Wrap 3)) (Leaf' (Wrap (-8)))) (Leaf' (Wrap 4)),Fork' (Fork' (Leaf' (Wrap (-3))) (Fork' (Fork' (Leaf' (Wrap (-1))) (Leaf' (Wrap (-8)))) (Fork' (Leaf' (Wrap 5)) (Leaf' (Wrap (-2)))))) (Fork' (Fork' (Fork' (Leaf' (Wrap (-6))) (Leaf' (Wrap 7))) (Leaf' (Wrap 7))) (Leaf' (Wrap (-9)))),Fork' (Fork' (Fork' (Leaf' (Wrap 7)) (Fork' (Leaf' (Wrap 9)) (Leaf' (Wrap 4)))) (Leaf' (Wrap 7))) (Fork' (Fork' (Fork' (Leaf' (Wrap 1)) (Leaf' (Wrap (-5)))) (Fork' (Leaf' (Wrap 7)) (Leaf' (Wrap (-9))))) (Fork' (Leaf' (Wrap 1)) (Leaf' (Wrap 6)))),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap 4)) (Leaf' (Wrap 3))) (Leaf' (Wrap 4))) (Leaf' (Wrap (-6)))) (Fork' (Fork' (Leaf' (Wrap 3)) (Leaf' (Wrap 5))) (Fork' (Leaf' (Wrap (-3))) (Fork' (Leaf' (Wrap 10)) (Leaf' (Wrap 2))))),Fork' (Fork' (Fork' (Fork' (Leaf' (Wrap 5)) (Leaf' (Wrap 8))) (Fork' (Leaf' (Wrap 3)) (Leaf' (Wrap 7)))) (Leaf' (Wrap (-2)))) (Fork' (Leaf' (Wrap 8)) (Fork' (Leaf' (Wrap (-5))) (Leaf' (Wrap 2)))),Fork' (Fork' (Fork' (Leaf' (Wrap (-4))) (Leaf' (Wrap (-4)))) (Fork' (Leaf' (Wrap 3)) (Leaf' (Wrap (-2))))) (Fork' (Leaf' (Wrap (-9))) (Leaf' (Wrap (-7))))]
func_treeFold_out = [Wrap 0,Wrap 0,Wrap (-6),Wrap 1,Wrap 0,Wrap 30,Wrap (-11),Wrap 4,Wrap 6,Wrap (-79),Wrap (-88),Wrap (-57),Wrap (-117),Wrap 2,Wrap 72,Wrap 57,Wrap 13,Wrap (-18),Wrap 31,Wrap (-80),Wrap 7,Wrap 101,Wrap (-32),Wrap (-76),Wrap (-92),Wrap (-156),Wrap (-26),Wrap (-20),Wrap (-54),Wrap 67,Wrap (-5),Wrap (-25),Wrap 45,Wrap 132,Wrap 63,Wrap (-60)]

-- Inputs and correct outputs for treeFlatten
treeFlatten_in = [Leaf' 0,Fork' (Leaf' (-1)) (Leaf' 0),Leaf' 2,Fork' (Fork' (Leaf' 1) (Leaf' 0)) (Fork' (Leaf' 1) (Leaf' (-1))),Fork' (Fork' (Fork' (Leaf' 1) (Leaf' 0)) (Leaf' (-3))) (Fork' (Fork' (Leaf' 0) (Leaf' (-1))) (Fork' (Leaf' (-2)) (Leaf' 4))),Fork' (Fork' (Leaf' 1) (Leaf' 4)) (Fork' (Leaf' (-1)) (Leaf' (-5))),Fork' (Leaf' 3) (Fork' (Fork' (Leaf' (-6)) (Leaf' (-3))) (Leaf' 2)),Fork' (Fork' (Leaf' 0) (Fork' (Leaf' (-7)) (Leaf' 5))) (Fork' (Leaf' 3) (Fork' (Leaf' 0) (Leaf' (-4)))),Fork' (Fork' (Fork' (Leaf' 7) (Fork' (Leaf' 7) (Leaf' 2))) (Fork' (Leaf' 5) (Fork' (Leaf' (-2)) (Leaf' (-5))))) (Fork' (Leaf' 1) (Fork' (Leaf' (-8)) (Leaf' 5))),Leaf' (-4),Fork' (Fork' (Fork' (Leaf' (-2)) (Leaf' (-5))) (Fork' (Leaf' 4) (Leaf' (-8)))) (Leaf' 9),Fork' (Fork' (Fork' (Leaf' 2) (Fork' (Leaf' 7) (Leaf' 5))) (Fork' (Fork' (Leaf' 4) (Leaf' 5)) (Leaf' 10))) (Leaf' (-9)),Fork' (Fork' (Fork' (Fork' (Leaf' 4) (Leaf' 8)) (Fork' (Leaf' (-7)) (Leaf' 8))) (Leaf' 7)) (Fork' (Fork' (Fork' (Leaf' 8) (Leaf' (-1))) (Leaf' 9)) (Fork' (Fork' (Leaf' 8) (Leaf' 6)) (Leaf' (-3)))),Fork' (Fork' (Fork' (Leaf' (-8)) (Fork' (Leaf' 2) (Leaf' (-1)))) (Fork' (Leaf' 7) (Leaf' 5))) (Fork' (Fork' (Leaf' 0) (Leaf' 4)) (Fork' (Fork' (Leaf' 4) (Leaf' 4)) (Leaf' (-6)))),Fork' (Fork' (Leaf' 9) (Fork' (Leaf' (-7)) (Leaf' 9))) (Fork' (Fork' (Leaf' (-1)) (Fork' (Leaf' (-2)) (Leaf' 2))) (Fork' (Fork' (Leaf' (-3)) (Leaf' (-3))) (Fork' (Leaf' 5) (Leaf' 7)))),Fork' (Fork' (Leaf' (-3)) (Leaf' 8)) (Fork' (Leaf' 3) (Leaf' (-8))),Fork' (Fork' (Leaf' 10) (Fork' (Fork' (Leaf' (-6)) (Leaf' (-4))) (Fork' (Leaf' (-1)) (Leaf' 6)))) (Fork' (Leaf' (-5)) (Fork' (Fork' (Leaf' 6) (Leaf' (-4))) (Fork' (Leaf' 2) (Leaf' 6)))),Fork' (Fork' (Leaf' 1) (Fork' (Fork' (Leaf' (-7)) (Leaf' 7)) (Fork' (Leaf' (-7)) (Leaf' (-10))))) (Fork' (Fork' (Leaf' 3) (Leaf' (-7))) (Fork' (Fork' (Leaf' 4) (Leaf' (-3))) (Fork' (Leaf' 3) (Leaf' (-1))))),Leaf' 4,Fork' (Fork' (Fork' (Fork' (Leaf' (-2)) (Leaf' (-2))) (Fork' (Leaf' 2) (Leaf' 4))) (Fork' (Fork' (Leaf' (-8)) (Leaf' 2)) (Leaf' (-1)))) (Fork' (Fork' (Fork' (Leaf' 1) (Leaf' (-9))) (Fork' (Leaf' (-4)) (Leaf' (-4)))) (Fork' (Leaf' (-7)) (Leaf' 0))),Fork' (Fork' (Leaf' 7) (Fork' (Fork' (Leaf' (-4)) (Leaf' (-10))) (Fork' (Leaf' (-4)) (Leaf' 1)))) (Fork' (Leaf' 10) (Fork' (Fork' (Leaf' 0) (Leaf' 6)) (Leaf' 10))),Fork' (Fork' (Leaf' (-8)) (Leaf' 4)) (Fork' (Fork' (Fork' (Leaf' (-5)) (Leaf' (-10))) (Leaf' 8)) (Fork' (Fork' (Leaf' 6) (Leaf' 10)) (Fork' (Leaf' 3) (Leaf' 0)))),Fork' (Fork' (Leaf' (-5)) (Fork' (Fork' (Leaf' 4) (Leaf' 6)) (Fork' (Leaf' 0) (Leaf' (-2))))) (Fork' (Leaf' 2) (Fork' (Fork' (Leaf' 2) (Leaf' (-7))) (Leaf' 1))),Fork' (Fork' (Fork' (Leaf' 2) (Fork' (Leaf' (-10)) (Leaf' (-7)))) (Leaf' 1)) (Fork' (Fork' (Fork' (Leaf' 2) (Leaf' 5)) (Fork' (Leaf' (-1)) (Leaf' 2))) (Leaf' (-8))),Fork' (Fork' (Fork' (Leaf' 2) (Leaf' 10)) (Fork' (Fork' (Leaf' (-6)) (Leaf' (-1))) (Leaf' 3))) (Fork' (Leaf' (-2)) (Fork' (Fork' (Leaf' (-5)) (Leaf' 6)) (Fork' (Leaf' 10) (Leaf' (-7))))),Fork' (Fork' (Fork' (Fork' (Leaf' (-1)) (Leaf' (-4))) (Fork' (Leaf' (-5)) (Leaf' (-2)))) (Fork' (Fork' (Leaf' 10) (Leaf' 3)) (Fork' (Leaf' 0) (Leaf' 6)))) (Fork' (Fork' (Leaf' (-7)) (Fork' (Leaf' 0) (Leaf' (-2)))) (Leaf' 4)),Fork' (Fork' (Fork' (Leaf' 1) (Fork' (Leaf' (-5)) (Leaf' 2))) (Fork' (Leaf' (-4)) (Leaf' (-8)))) (Fork' (Fork' (Leaf' (-7)) (Fork' (Leaf' 6) (Leaf' (-3)))) (Fork' (Fork' (Leaf' 6) (Leaf' (-2))) (Leaf' 1))),Fork' (Fork' (Fork' (Fork' (Leaf' 10) (Leaf' (-8))) (Leaf' (-8))) (Fork' (Leaf' (-10)) (Fork' (Leaf' 0) (Leaf' 6)))) (Fork' (Fork' (Fork' (Leaf' 4) (Leaf' 6)) (Leaf' 1)) (Fork' (Fork' (Leaf' 9) (Leaf' 3)) (Fork' (Leaf' 3) (Leaf' (-9))))),Fork' (Leaf' 2) (Fork' (Fork' (Fork' (Leaf' 1) (Leaf' (-6))) (Fork' (Leaf' 3) (Leaf' 2))) (Fork' (Fork' (Leaf' 8) (Leaf' (-10))) (Leaf' 3))),Fork' (Fork' (Leaf' 1) (Fork' (Leaf' 6) (Fork' (Leaf' 8) (Leaf' 9)))) (Fork' (Fork' (Fork' (Leaf' 1) (Leaf' 6)) (Fork' (Leaf' (-2)) (Leaf' 8))) (Fork' (Leaf' 4) (Fork' (Leaf' 5) (Leaf' (-8))))),Fork' (Fork' (Leaf' 2) (Fork' (Leaf' 5) (Leaf' 0))) (Fork' (Leaf' 1) (Fork' (Fork' (Leaf' (-10)) (Leaf' (-5))) (Fork' (Leaf' (-2)) (Leaf' 9)))),Fork' (Fork' (Fork' (Leaf' 3) (Fork' (Leaf' (-6)) (Leaf' (-4)))) (Leaf' 6)) (Fork' (Fork' (Fork' (Leaf' 6) (Leaf' (-9))) (Fork' (Leaf' 2) (Leaf' (-3)))) (Fork' (Leaf' (-9)) (Fork' (Leaf' 8) (Leaf' (-7))))),Fork' (Fork' (Fork' (Fork' (Leaf' 8) (Leaf' (-7))) (Fork' (Leaf' 8) (Leaf' (-8)))) (Leaf' (-8))) (Fork' (Fork' (Leaf' 3) (Fork' (Leaf' (-10)) (Leaf' (-10)))) (Leaf' (-3))),Fork' (Leaf' (-3)) (Fork' (Fork' (Fork' (Leaf' (-10)) (Leaf' (-3))) (Leaf' 7)) (Leaf' 7)),Fork' (Leaf' (-6)) (Fork' (Fork' (Leaf' (-8)) (Leaf' 2)) (Fork' (Leaf' (-4)) (Leaf' (-3)))),Fork' (Leaf' 0) (Fork' (Fork' (Leaf' (-2)) (Leaf' 7)) (Fork' (Leaf' (-9)) (Fork' (Leaf' (-9)) (Leaf' (-10)))))]
treeFlatten_out = [[0],[-1,0],[2],[1,0,1,-1],[1,0,-3,0,-1,-2,4],[1,4,-1,-5],[3,-6,-3,2],[0,-7,5,3,0,-4],[7,7,2,5,-2,-5,1,-8,5],[-4],[-2,-5,4,-8,9],[2,7,5,4,5,10,-9],[4,8,-7,8,7,8,-1,9,8,6,-3],[-8,2,-1,7,5,0,4,4,4,-6],[9,-7,9,-1,-2,2,-3,-3,5,7],[-3,8,3,-8],[10,-6,-4,-1,6,-5,6,-4,2,6],[1,-7,7,-7,-10,3,-7,4,-3,3,-1],[4],[-2,-2,2,4,-8,2,-1,1,-9,-4,-4,-7,0],[7,-4,-10,-4,1,10,0,6,10],[-8,4,-5,-10,8,6,10,3,0],[-5,4,6,0,-2,2,2,-7,1],[2,-10,-7,1,2,5,-1,2,-8],[2,10,-6,-1,3,-2,-5,6,10,-7],[-1,-4,-5,-2,10,3,0,6,-7,0,-2,4],[1,-5,2,-4,-8,-7,6,-3,6,-2,1],[10,-8,-8,-10,0,6,4,6,1,9,3,3,-9],[2,1,-6,3,2,8,-10,3],[1,6,8,9,1,6,-2,8,4,5,-8],[2,5,0,1,-10,-5,-2,9],[3,-6,-4,6,6,-9,2,-3,-9,8,-7],[8,-7,8,-8,-8,3,-10,-10,-3],[-3,-10,-3,7,7],[-6,-8,2,-4,-3],[0,-2,7,-9,-9,-10]]
